package view;

import celcius.Config;
import excel.ItemSummaryObject;
import excel.QuationObject;
import excel.SummaryObject;
import java.awt.EventQueue;
import java.text.DecimalFormat;
import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logic.DuvetsLogic;
import ui.helpers.ComboBoxRenderer;
import viewmodels.DovetsViewModel;

/**
 *
 * @author naka
 */
public class DuvetsCostingPanel extends javax.swing.JPanel {

    /**
     * Creates new form DuvetsCostingPanel
     */
    public DuvetsCostingPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        duvetsCostingPanel = new javax.swing.JPanel();
        jLabel120 = new javax.swing.JLabel();
        jLabel152 = new javax.swing.JLabel();
        duvetTypeCombo = new javax.swing.JComboBox();
        duvetProductRangeCombo = new javax.swing.JComboBox();
        duvetsFabricWastage = new javax.swing.JTextField();
        jLabel157 = new javax.swing.JLabel();
        jLabel158 = new javax.swing.JLabel();
        jLabel159 = new javax.swing.JLabel();
        duvetsCustomPanel = new javax.swing.JPanel();
        jLabel160 = new javax.swing.JLabel();
        jLabel161 = new javax.swing.JLabel();
        duvetsCustomWidth = new javax.swing.JTextField();
        duvetsCustomHeight = new javax.swing.JTextField();
        duvetsIncludeLable = new javax.swing.JRadioButton();
        duvetsIncludeTag = new javax.swing.JRadioButton();
        duvetsIncludePEBag = new javax.swing.JRadioButton();
        duvetsIncludeNonWovenBag = new javax.swing.JRadioButton();
        jLabel166 = new javax.swing.JLabel();
        duvetFabricTypeCombo = new javax.swing.JComboBox();
        duvetsSizeLable = new javax.swing.JLabel();
        duvetSizeCombo = new javax.swing.JComboBox();
        duvetsSubmitButton = new javax.swing.JButton();
        duvetsGelFeatherPanel = new javax.swing.JPanel();
        jLabel164 = new javax.swing.JLabel();
        jLabel191 = new javax.swing.JLabel();
        duvetFiberTypeCombo = new javax.swing.JComboBox();
        duvetFiberWastage = new javax.swing.JTextField();
        jLabel192 = new javax.swing.JLabel();
        jLabel193 = new javax.swing.JLabel();
        duvetFillingGsm = new javax.swing.JTextField();
        duvetNormalBabyPanel = new javax.swing.JPanel();
        jLabel194 = new javax.swing.JLabel();
        duvetPaddingTypeCombo = new javax.swing.JComboBox();
        jLabel167 = new javax.swing.JLabel();
        duvetsWidthQuiltingShrinkage = new javax.swing.JTextField();
        jLabel168 = new javax.swing.JLabel();
        jLabel169 = new javax.swing.JLabel();
        duvetsHeightQuiltiingShrinkage = new javax.swing.JTextField();
        jLabel170 = new javax.swing.JLabel();
        jLabel163 = new javax.swing.JLabel();
        duvetsPaddingWastage = new javax.swing.JTextField();
        jLabel165 = new javax.swing.JLabel();
        duvetsUseCustom = new javax.swing.JRadioButton();
        jLabel309 = new javax.swing.JLabel();
        jLabel310 = new javax.swing.JLabel();
        duvetsTaxField = new javax.swing.JTextField();
        jLabel311 = new javax.swing.JLabel();
        jLabel312 = new javax.swing.JLabel();
        duvetsMarginField = new javax.swing.JTextField();
        jLabel313 = new javax.swing.JLabel();
        duvetsOtherCostVal = new javax.swing.JTextField();
        jLabel314 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        duvetsCPUPanel = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel182 = new javax.swing.JLabel();
        jLabel183 = new javax.swing.JLabel();
        duvetsFabricCutWidth = new javax.swing.JLabel();
        jLabel184 = new javax.swing.JLabel();
        duvetsFabricCutHeight = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        jLabel189 = new javax.swing.JLabel();
        duvetsFiberWeight = new javax.swing.JLabel();
        duvetsSMVValue = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel176 = new javax.swing.JLabel();
        jLabel180 = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        jLabel190 = new javax.swing.JLabel();
        duvetsPaddingCost = new javax.swing.JLabel();
        duvetsLabourCost = new javax.swing.JLabel();
        duvetsFiberCost = new javax.swing.JLabel();
        duvetsThreadCost = new javax.swing.JLabel();
        jLabel185 = new javax.swing.JLabel();
        duvetsTagCost = new javax.swing.JLabel();
        duvetsLableCost = new javax.swing.JLabel();
        jLabel177 = new javax.swing.JLabel();
        jLabel179 = new javax.swing.JLabel();
        jLabel175 = new javax.swing.JLabel();
        jLabel187 = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        duvetsPOH = new javax.swing.JLabel();
        duvetsNonWovenBagCost = new javax.swing.JLabel();
        jLabel188 = new javax.swing.JLabel();
        jLabel174 = new javax.swing.JLabel();
        duvetsPEBagCost = new javax.swing.JLabel();
        duvetsTotalMaterialCost = new javax.swing.JLabel();
        duvetsFabricCost = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        duvetsPipingCost = new javax.swing.JLabel();
        duvetsToatalCost = new javax.swing.JLabel();
        jLabel340 = new javax.swing.JLabel();
        jLabel341 = new javax.swing.JLabel();
        jLabel342 = new javax.swing.JLabel();
        duvetsNetSellingPrice = new javax.swing.JLabel();
        duvetsTaxes = new javax.swing.JLabel();
        duvetsGrossSellingPrice = new javax.swing.JLabel();
        duvetExportButton = new javax.swing.JButton();

        jLabel120.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel120.setText("Duvets Costing");

        jLabel152.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel152.setText("Select Duvet Type:");

        duvetTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(DuvetsLogic.getDuvetTypes()));
        duvetTypeCombo.setRenderer(new ComboBoxRenderer(DuvetsLogic.getDuvetTypes()));
        duvetTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetTypeComboActionPerformed(evt);
            }
        });

        duvetProductRangeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetProductRangeCombo.setModel(new javax.swing.DefaultComboBoxModel(DuvetsLogic.getProductRanges((String)duvetTypeCombo.getSelectedItem())));
        duvetProductRangeCombo.setRenderer(new ComboBoxRenderer(DuvetsLogic.getProductRanges((String)duvetTypeCombo.getSelectedItem())));
        duvetProductRangeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetProductRangeComboActionPerformed(evt);
            }
        });

        duvetsFabricWastage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsFabricWastage.setText("3");
        duvetsFabricWastage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetsFabricWastageActionPerformed(evt);
            }
        });

        jLabel157.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel157.setText("%");

        jLabel158.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel158.setText("Select Product Range:");

        jLabel159.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel159.setText("Fabric Wastage:");

        jLabel160.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel160.setText("Width (inches) :");

        jLabel161.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel161.setText("Height (inches):");

        duvetsCustomWidth.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        duvetsCustomHeight.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        duvetsIncludeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsIncludeLable.setText("Include Lable");

        duvetsIncludeTag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsIncludeTag.setText("Include Tag");

        duvetsIncludePEBag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsIncludePEBag.setText("Include PE Bag");

        duvetsIncludeNonWovenBag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsIncludeNonWovenBag.setText("Include Non Woven Bag");

        javax.swing.GroupLayout duvetsCustomPanelLayout = new javax.swing.GroupLayout(duvetsCustomPanel);
        duvetsCustomPanel.setLayout(duvetsCustomPanelLayout);
        duvetsCustomPanelLayout.setHorizontalGroup(
            duvetsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetsCustomPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(duvetsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(duvetsIncludeNonWovenBag)
                    .addComponent(duvetsIncludeTag)
                    .addComponent(duvetsIncludePEBag)
                    .addGroup(duvetsCustomPanelLayout.createSequentialGroup()
                        .addGroup(duvetsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel160)
                            .addComponent(jLabel161)
                            .addComponent(duvetsIncludeLable))
                        .addGap(100, 100, 100)
                        .addGroup(duvetsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(duvetsCustomHeight)
                            .addComponent(duvetsCustomWidth, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        duvetsCustomPanelLayout.setVerticalGroup(
            duvetsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetsCustomPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(duvetsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(duvetsCustomPanelLayout.createSequentialGroup()
                        .addComponent(duvetsCustomWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(duvetsCustomHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(duvetsCustomPanelLayout.createSequentialGroup()
                        .addComponent(jLabel160)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel161)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(duvetsIncludeLable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(duvetsIncludeTag)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duvetsIncludePEBag)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duvetsIncludeNonWovenBag)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        if(((String)duvetTypeCombo.getSelectedItem()).equalsIgnoreCase("Baby")){
            duvetsIncludeNonWovenBag.setVisible(false);
        }else{
            duvetsIncludeNonWovenBag.setVisible(true);
        }

        jLabel166.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel166.setText("Select Fabric Type:");

        duvetFabricTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetFabricTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(DuvetsLogic.getMaterialTypes((String)duvetProductRangeCombo.getSelectedItem())));
        duvetFabricTypeCombo.setRenderer(new ComboBoxRenderer(DuvetsLogic.getMaterialTypes((String)duvetProductRangeCombo.getSelectedItem())));

        duvetsSizeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsSizeLable.setText("Select Size:");

        duvetSizeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetSizeCombo.setModel(new javax.swing.DefaultComboBoxModel(DuvetsLogic.getDuvetsizes((String)duvetTypeCombo.getSelectedItem())));
        duvetSizeCombo.setRenderer(new ComboBoxRenderer(DuvetsLogic.getDuvetsizes((String)duvetTypeCombo.getSelectedItem())));

        duvetsSubmitButton.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsSubmitButton.setText("Find Cost Per Unit");
        duvetsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetsSubmitButtonActionPerformed(evt);
            }
        });

        jLabel164.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel164.setText("Select Fiber Type:");

        jLabel191.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel191.setText("Fiber Wastage:");

        duvetFiberTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetFiberTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(DuvetsLogic.getFiberTypes()));
        duvetFiberTypeCombo.setRenderer(new ComboBoxRenderer(DuvetsLogic.getFiberTypes()));

        duvetFiberWastage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetFiberWastage.setText("3");
        duvetFiberWastage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetFiberWastageActionPerformed(evt);
            }
        });

        jLabel192.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel192.setText("%");

        jLabel193.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel193.setText("Filling gsm:");

        duvetFillingGsm.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetFillingGsm.setToolTipText("Some Text");
        duvetFillingGsm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetFillingGsmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout duvetsGelFeatherPanelLayout = new javax.swing.GroupLayout(duvetsGelFeatherPanel);
        duvetsGelFeatherPanel.setLayout(duvetsGelFeatherPanelLayout);
        duvetsGelFeatherPanelLayout.setHorizontalGroup(
            duvetsGelFeatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, duvetsGelFeatherPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(duvetsGelFeatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel191)
                    .addComponent(jLabel164, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel193))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsGelFeatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(duvetsGelFeatherPanelLayout.createSequentialGroup()
                        .addComponent(duvetFiberWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel192))
                    .addComponent(duvetFiberTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duvetFillingGsm, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
        duvetsGelFeatherPanelLayout.setVerticalGroup(
            duvetsGelFeatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetsGelFeatherPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(duvetsGelFeatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel164)
                    .addComponent(duvetFiberTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsGelFeatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel191)
                    .addComponent(duvetFiberWastage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel192))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsGelFeatherPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel193)
                    .addComponent(duvetFillingGsm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel194.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel194.setText("Select Padding Type:");

        duvetPaddingTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetPaddingTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(DuvetsLogic.getPaddingTypes()));
        duvetPaddingTypeCombo.setRenderer(new ComboBoxRenderer(DuvetsLogic.getPaddingTypes()));

        jLabel167.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel167.setText("Width Quilting Shrinkage:");

        duvetsWidthQuiltingShrinkage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsWidthQuiltingShrinkage.setText("8");
        duvetsWidthQuiltingShrinkage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetsWidthQuiltingShrinkageActionPerformed(evt);
            }
        });

        jLabel168.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel168.setText("Height Quilting Shrinkage:");

        jLabel169.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel169.setText("%");

        duvetsHeightQuiltiingShrinkage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsHeightQuiltiingShrinkage.setText("3");
        duvetsHeightQuiltiingShrinkage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetsHeightQuiltiingShrinkageActionPerformed(evt);
            }
        });

        jLabel170.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel170.setText("%");

        jLabel163.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel163.setText("Padding Wastage:");

        duvetsPaddingWastage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsPaddingWastage.setText("3");
        duvetsPaddingWastage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetsPaddingWastageActionPerformed(evt);
            }
        });

        jLabel165.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel165.setText("%");

        javax.swing.GroupLayout duvetNormalBabyPanelLayout = new javax.swing.GroupLayout(duvetNormalBabyPanel);
        duvetNormalBabyPanel.setLayout(duvetNormalBabyPanelLayout);
        duvetNormalBabyPanelLayout.setHorizontalGroup(
            duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetNormalBabyPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel194, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel167)
                    .addComponent(jLabel168)
                    .addComponent(jLabel163))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(duvetNormalBabyPanelLayout.createSequentialGroup()
                        .addGroup(duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(duvetNormalBabyPanelLayout.createSequentialGroup()
                                .addComponent(duvetsWidthQuiltingShrinkage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel169))
                            .addGroup(duvetNormalBabyPanelLayout.createSequentialGroup()
                                .addComponent(duvetsHeightQuiltiingShrinkage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel170))
                            .addGroup(duvetNormalBabyPanelLayout.createSequentialGroup()
                                .addComponent(duvetsPaddingWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel165)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(duvetPaddingTypeCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        duvetNormalBabyPanelLayout.setVerticalGroup(
            duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetNormalBabyPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(duvetPaddingTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel194))
                .addGap(9, 9, 9)
                .addGroup(duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel167)
                    .addComponent(duvetsWidthQuiltingShrinkage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel169))
                .addGap(6, 6, 6)
                .addGroup(duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel168)
                    .addComponent(duvetsHeightQuiltiingShrinkage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel170))
                .addGap(11, 11, 11)
                .addGroup(duvetNormalBabyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel163)
                    .addComponent(duvetsPaddingWastage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel165))
                .addContainerGap())
        );

        duvetsUseCustom.setBackground(new java.awt.Color(204, 204, 204));
        duvetsUseCustom.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsUseCustom.setText("Use Custom Sizes");
        duvetsUseCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetsUseCustomActionPerformed(evt);
            }
        });

        jLabel309.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel309.setText("Margin:");

        jLabel310.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel310.setText("Taxes:");

        duvetsTaxField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsTaxField.setText(Config.taxesRate);

        jLabel311.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel311.setText("%");

        jLabel312.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel312.setText("%");

        duvetsMarginField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsMarginField.setText(Config.profitMargin);

        jLabel313.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel313.setText("Other cost:");

        duvetsOtherCostVal.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsOtherCostVal.setText("0.0");
        duvetsTaxField.setText(Config.taxesRate);

        jLabel314.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel314.setText("Quantity");

        quantity.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        quantity.setText("1");
        duvetsTaxField.setText(Config.taxesRate);
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout duvetsCostingPanelLayout = new javax.swing.GroupLayout(duvetsCostingPanel);
        duvetsCostingPanel.setLayout(duvetsCostingPanelLayout);
        duvetsCostingPanelLayout.setHorizontalGroup(
            duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duvetsCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(duvetsUseCustom)))
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(duvetNormalBabyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(duvetsSizeLable)
                            .addComponent(jLabel166)
                            .addComponent(jLabel158)
                            .addComponent(jLabel152)
                            .addComponent(jLabel159)))
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(duvetProductRangeCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(duvetTypeCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 209, Short.MAX_VALUE)
                            .addComponent(duvetSizeCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(duvetFabricTypeCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 203, Short.MAX_VALUE)
                            .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                                .addComponent(duvetsFabricWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel157))))
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(duvetsGelFeatherPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel120))
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(duvetsSubmitButton))
                    .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel310)
                            .addComponent(jLabel309)
                            .addComponent(jLabel313)
                            .addComponent(jLabel314))
                        .addGap(160, 160, 160)
                        .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(duvetsOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                                .addComponent(duvetsTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel311))
                            .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                                .addComponent(duvetsMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel312)))))
                .addContainerGap())
        );
        duvetsCostingPanelLayout.setVerticalGroup(
            duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetsCostingPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel120)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel152)
                    .addComponent(duvetTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel158)
                    .addComponent(duvetProductRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel166)
                    .addComponent(duvetFabricTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(duvetsSizeLable)
                    .addComponent(duvetSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel159)
                    .addComponent(duvetsFabricWastage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel157))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duvetsGelFeatherPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duvetNormalBabyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(duvetsUseCustom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duvetsCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(duvetsMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel309)
                    .addComponent(jLabel312))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(duvetsTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel310)
                    .addComponent(jLabel311))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel313)
                    .addComponent(duvetsOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(duvetsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel314)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(duvetsSubmitButton))
        );

        duvetsCustomPanel.setVisible(false);
        duvetsGelFeatherPanel.setVisible(false);

        jLabel182.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel182.setText("Fabric Cutting Height:");

        jLabel183.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel183.setText("SMV Value:");

        duvetsFabricCutWidth.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsFabricCutWidth.setText("0.00");

        jLabel184.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel184.setText("Production Parameters");

        duvetsFabricCutHeight.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsFabricCutHeight.setText("0.00");

        jLabel181.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel181.setText("Fabric Cutting Width:");

        jLabel189.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel189.setText("Fiber Weight");

        duvetsFiberWeight.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsFiberWeight.setText("0.00");

        duvetsSMVValue.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsSMVValue.setText("0.00");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel181)
                    .addComponent(jLabel182)
                    .addComponent(jLabel189)
                    .addComponent(jLabel183))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(duvetsFiberWeight, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(duvetsSMVValue, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(duvetsFabricCutHeight, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(duvetsFabricCutWidth, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel184)
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel184, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel181)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel182)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel189)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel183))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(duvetsFabricCutWidth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duvetsFabricCutHeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duvetsFiberWeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duvetsSMVValue)))
                .addContainerGap())
        );

        jLabel176.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel176.setText("PE Bag Cost:");

        jLabel180.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel180.setText("Cost Per Unit");

        jLabel173.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel173.setText("Thread Cost:");

        jLabel178.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel178.setText("Labour Cost:");

        jLabel190.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel190.setText("Piping Cost:");

        duvetsPaddingCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsPaddingCost.setText("0.00");

        duvetsLabourCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsLabourCost.setText("0.00");

        duvetsFiberCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsFiberCost.setText("0.00");

        duvetsThreadCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsThreadCost.setText("0.00");

        jLabel185.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel185.setText("Non Woven Bag Cost:");

        duvetsTagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsTagCost.setText("0.00");

        duvetsLableCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsLableCost.setText("0.00");

        jLabel177.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel177.setText("POH:");

        jLabel179.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel179.setText("Toatal Cost Per Unit:");

        jLabel175.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel175.setText("Tag Cost:");

        jLabel187.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel187.setText("Padding Cost:");

        jLabel186.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel186.setText("Total Material Cost");

        duvetsPOH.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsPOH.setText("0.00");

        duvetsNonWovenBagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsNonWovenBagCost.setText("0.00");

        jLabel188.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel188.setText("Fiber Cost:");

        jLabel174.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel174.setText("Lable Cost:");

        duvetsPEBagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsPEBagCost.setText("0.00");

        duvetsTotalMaterialCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        duvetsTotalMaterialCost.setText("0.00");

        duvetsFabricCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsFabricCost.setText("0.00");

        jLabel172.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel172.setText("Fabric Cost:");

        duvetsPipingCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        duvetsPipingCost.setText("0.00");

        duvetsToatalCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        duvetsToatalCost.setText("0.00");

        jLabel340.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel340.setText("Net Selling Price:");

        jLabel341.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel341.setText("Taxes:");

        jLabel342.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel342.setText("Gross Selling Price:");

        duvetsNetSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        duvetsNetSellingPrice.setText("0.00");

        duvetsTaxes.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        duvetsTaxes.setText("0.00");

        duvetsGrossSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        duvetsGrossSellingPrice.setText("0.00");

        duvetExportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/export.png"))); // NOI18N
        duvetExportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duvetExportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel180))
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addComponent(jLabel342)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(duvetsGrossSellingPrice))
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addComponent(jLabel341)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(duvetsTaxes))
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addComponent(jLabel340)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(duvetsNetSellingPrice))
                            .addGroup(jPanel35Layout.createSequentialGroup()
                                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel177)
                                    .addComponent(jLabel178)
                                    .addComponent(jLabel179)
                                    .addComponent(jLabel185)
                                    .addComponent(jLabel190)
                                    .addComponent(jLabel188)
                                    .addComponent(jLabel175)
                                    .addComponent(jLabel187)
                                    .addComponent(jLabel176)
                                    .addComponent(jLabel173)
                                    .addComponent(jLabel174)
                                    .addComponent(jLabel172)
                                    .addComponent(jLabel186))
                                .addGap(204, 204, 204)
                                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(duvetsFabricCost)
                                    .addComponent(duvetsNonWovenBagCost)
                                    .addComponent(duvetsLableCost)
                                    .addComponent(duvetsThreadCost)
                                    .addComponent(duvetsFiberCost)
                                    .addComponent(duvetsTagCost)
                                    .addComponent(duvetsLabourCost)
                                    .addComponent(duvetsPOH)
                                    .addComponent(duvetsToatalCost)
                                    .addComponent(duvetsPipingCost)
                                    .addComponent(duvetsPaddingCost)
                                    .addComponent(duvetsPEBagCost)
                                    .addComponent(duvetsTotalMaterialCost)))))
                    .addComponent(duvetExportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel180, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(duvetExportButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel172)
                    .addComponent(duvetsFabricCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel187)
                    .addComponent(duvetsPaddingCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel188)
                    .addComponent(duvetsFiberCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel173)
                    .addComponent(duvetsThreadCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel174)
                    .addComponent(duvetsLableCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel175)
                    .addComponent(duvetsTagCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel185)
                    .addComponent(duvetsNonWovenBagCost, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel190)
                    .addComponent(duvetsPipingCost, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(duvetsPEBagCost)
                    .addComponent(jLabel176))
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(duvetsPOH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(duvetsLabourCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duvetsToatalCost))
                    .addGroup(jPanel35Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel186)
                            .addComponent(duvetsTotalMaterialCost))
                        .addGap(19, 19, 19)
                        .addComponent(jLabel177)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel178)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel179)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel340)
                    .addComponent(duvetsNetSellingPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel341)
                    .addComponent(duvetsTaxes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel342)
                    .addComponent(duvetsGrossSellingPrice))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout duvetsCPUPanelLayout = new javax.swing.GroupLayout(duvetsCPUPanel);
        duvetsCPUPanel.setLayout(duvetsCPUPanelLayout);
        duvetsCPUPanelLayout.setHorizontalGroup(
            duvetsCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetsCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(duvetsCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        duvetsCPUPanelLayout.setVerticalGroup(
            duvetsCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duvetsCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(duvetsCostingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(duvetsCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(duvetsCostingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(duvetsCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        duvetsCPUPanel.setVisible(false);
    }// </editor-fold>//GEN-END:initComponents

    private void duvetTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetTypeComboActionPerformed
        duvetProductRangeCombo.setModel(new DefaultComboBoxModel(DuvetsLogic.getProductRanges((String) duvetTypeCombo.getSelectedItem())));
        duvetFabricTypeCombo.setModel(new DefaultComboBoxModel(DuvetsLogic.getMaterialTypes((String) duvetProductRangeCombo.getSelectedItem())));
        duvetSizeCombo.setModel(new DefaultComboBoxModel(DuvetsLogic.getDuvetsizes((String) duvetTypeCombo.getSelectedItem())));
        if (((String) duvetTypeCombo.getSelectedItem()).equalsIgnoreCase("Gel/Feather")) {
            duvetsGelFeatherPanel.setVisible(true);
            duvetNormalBabyPanel.setVisible(false);
        } else {
            duvetsGelFeatherPanel.setVisible(false);
            duvetNormalBabyPanel.setVisible(true);
        }
        if (((String) duvetFiberTypeCombo.getSelectedItem()).equalsIgnoreCase("Baby")) {
            duvetsIncludeNonWovenBag.setVisible(false);
        } else {
            duvetsIncludeNonWovenBag.setVisible(true);
        }
}//GEN-LAST:event_duvetTypeComboActionPerformed

    private void duvetProductRangeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetProductRangeComboActionPerformed
        duvetFabricTypeCombo.setModel(new DefaultComboBoxModel(DuvetsLogic.getMaterialTypes((String) duvetProductRangeCombo.getSelectedItem())));
}//GEN-LAST:event_duvetProductRangeComboActionPerformed

    private void duvetsFabricWastageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetsFabricWastageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_duvetsFabricWastageActionPerformed

    private void duvetsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetsSubmitButtonActionPerformed
        DovetsViewModel dCost = new DovetsViewModel();

        String duvetType = (String) duvetTypeCombo.getSelectedItem();
        dCost.setDuvetType(duvetType);

        String productRange = (String) duvetProductRangeCombo.getSelectedItem();
        dCost.setProductRange(productRange);


        String fabricType = (String) duvetFabricTypeCombo.getSelectedItem();
        dCost.setMaterialType(fabricType);

        String size = (String) duvetSizeCombo.getSelectedItem();
        dCost.setSize(size);

        try {
            double fabricWastage = Double.parseDouble(duvetsFabricWastage.getText());
            if (fabricWastage < 0 || fabricWastage > 10) {
                JOptionPane.showMessageDialog(this, "Fabric wastage should be between 0 and 10 %");
                return;
            }
            dCost.setFabricWastage(fabricWastage);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid fabric wastage value");
            return;
        }

        try {
            double otherCost = Double.parseDouble(duvetsOtherCostVal.getText());
            if (otherCost < 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
                return;
            }
            dCost.setOtherCost(otherCost);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
            return;
        }

        try {
            double margin = Double.parseDouble(duvetsMarginField.getText());
            if (margin < 0) {
                JOptionPane.showMessageDialog(this, "Profit margin should be a positive value");
                return;
            }
            dCost.setMargin(margin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid margin value");
            return;
        }

        try {
            double taxRate = Double.parseDouble(duvetsTaxField.getText());
            if (taxRate < 0) {
                JOptionPane.showMessageDialog(this, "Tax rate should be a positive value");
                return;
            }
            dCost.setTaxRate(taxRate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid tax rate value");
            return;
        }

        try {
            double margin = Double.parseDouble(duvetsMarginField.getText());
            if (margin < 0) {
                JOptionPane.showMessageDialog(this, "Profit margin should be a positive value");
                return;
            }
            dCost.setMargin(margin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid margin value");
            return;
        }

        try {
            double taxRate = Double.parseDouble(duvetsTaxField.getText());
            if (taxRate < 0) {
                JOptionPane.showMessageDialog(this, "Tax rate should be a positive value");
                return;
            }
            dCost.setTaxRate(taxRate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid tax rate value");
            return;
        }

        if (((String) duvetTypeCombo.getSelectedItem()).equalsIgnoreCase("Gel/Feather")) {

            String fiberType = (String) duvetFiberTypeCombo.getSelectedItem();
            dCost.setFiberType(fiberType);

            try {
                double fiberWastage = Double.parseDouble(duvetsFabricWastage.getText());
                if (fiberWastage < 0 || fiberWastage > 10) {
                    JOptionPane.showMessageDialog(this, "Fiber wastage should be between 0 and 10 %");
                    return;
                }
                dCost.setFiberWastage(fiberWastage);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid fiber wastage value");
                return;
            }

            try {
                double fillingGsm = Double.parseDouble(duvetFillingGsm.getText());
                if (fillingGsm <= 0 || fillingGsm >= 1500) {
                    JOptionPane.showMessageDialog(this, "Filling gsm should be between 0 and 1500");
                    return;
                }
                dCost.setFillingGsm(fillingGsm);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid filling gsm value");
                return;
            }
        } else {


            String paddingType = (String) duvetPaddingTypeCombo.getSelectedItem();
            dCost.setPaddingType(paddingType);

            try {
                double withQuiltingShrinkage = Double.parseDouble(duvetsWidthQuiltingShrinkage.getText());
                if (withQuiltingShrinkage < 0 || withQuiltingShrinkage > 20) {
                    JOptionPane.showMessageDialog(this, "Width quilting shrinkage should be between 0 and 20 %");
                    return;
                }
                dCost.setWidthQuiltyShrinkage(withQuiltingShrinkage);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid width quilting shrinkage value");
                return;
            }

            try {
                double heightQuiltingShrinkage = Double.parseDouble(duvetsHeightQuiltiingShrinkage.getText());
                if (heightQuiltingShrinkage < 0 || heightQuiltingShrinkage > 20) {
                    JOptionPane.showMessageDialog(this, "Width quilting shrinkage should be between 0 and 20 %");
                    return;
                }
                dCost.setHeightQuiltyShrinkage(heightQuiltingShrinkage);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid height quilting shrinkage value");
                return;
            }

            try {
                double paddingWastage = Double.parseDouble(duvetsPaddingWastage.getText());
                if (paddingWastage < 0 || paddingWastage > 20) {
                    JOptionPane.showMessageDialog(this, "Padding wastage should be between 0 and 20 %");
                    return;
                }
                dCost.setPaddingWastage(paddingWastage);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid padding wastage value");
                return;
            }
        }
        boolean useCustom = duvetsUseCustom.isSelected();
        if (useCustom) {
            dCost.setIsCustom(useCustom);
            try {
                Double width = Double.parseDouble(duvetsCustomWidth.getText());
                if (width <= 0 || width > 120) {
                    JOptionPane.showMessageDialog(this, "Width should be between 0 and 120");
                    return;
                }
                dCost.setCustomWidth(width);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid width value");
                return;
            }

            try {
                Double height = Double.parseDouble(duvetsCustomHeight.getText());
                if (height <= 0 || height > 120) {
                    JOptionPane.showMessageDialog(this, "Height should be between 0 and 120");
                    return;
                }
                dCost.setCustomHeight(height);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid height value");
                return;
            }

            dCost.setIncludeLable(duvetsIncludeLable.isSelected());
            dCost.setIncludeTag(duvetsIncludeTag.isSelected());
            dCost.setIncludePEBag(duvetsIncludePEBag.isSelected());
            dCost.setIncludeNonWovenBag(duvetsIncludeNonWovenBag.isSelected());
        }
        DecimalFormat format = new DecimalFormat();
        format.setMaximumFractionDigits(2);
        format.setMinimumFractionDigits(2);


        DovetsViewModel dReturn = DuvetsLogic.getCostPerUnit(dCost);
        duvetsFabricCost.setText(format.format(dReturn.getFabricCost()) + "");
        duvetsPaddingCost.setText(format.format(dReturn.getPaddingCost()) + "");
        duvetsFiberCost.setText(format.format(dReturn.getFiberCost()) + "");
        duvetsThreadCost.setText(format.format(dReturn.getThreadCost()) + "");
        duvetsLableCost.setText(format.format(dReturn.getLableCost()) + "");
        duvetsTagCost.setText(format.format(dReturn.getTagCost()) + "");
        duvetsPEBagCost.setText(format.format(dReturn.getPEBagCost()) + "");
        duvetsNonWovenBagCost.setText(format.format(dReturn.getNonWovenBagCost()) + "");
        duvetsPipingCost.setText(format.format(dReturn.getPipingCost()) + "");
        duvetsTotalMaterialCost.setText(format.format(dReturn.getTotalMaterialCost()) + "");
        duvetsPOH.setText(format.format(dReturn.getPohCost()) + "");
        duvetsLabourCost.setText(format.format(dReturn.getLabourCost()) + "");
        duvetsToatalCost.setText(format.format(dReturn.getTotalCost()) + "");
        duvetsFabricCutWidth.setText(format.format(dReturn.getFabricCuttingWidth()) + "");
        duvetsFabricCutHeight.setText(format.format(dReturn.getFabricCuttingHeight()) + "");
        duvetsFiberWeight.setText(format.format(dReturn.getFiberWeight()) + "");
        duvetsSMVValue.setText(format.format(dReturn.getSmvValue()) + "");
        duvetsNetSellingPrice.setText(format.format(dReturn.getNetSellingPrice()));
        duvetsTaxes.setText(format.format(dReturn.getTaxes()));
        duvetsGrossSellingPrice.setText(format.format(dReturn.getGrossSellingPrice()));

        MainWindow.tempFaric = dReturn.getFabric();
        MainWindow.tempTaffata = dReturn.getTaffata();
        MainWindow.tempPadding = dReturn.getPadding();
        
        duvetsCPUPanel.setVisible(true);
}//GEN-LAST:event_duvetsSubmitButtonActionPerformed

    private void duvetFiberWastageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetFiberWastageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_duvetFiberWastageActionPerformed

    private void duvetFillingGsmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetFillingGsmActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_duvetFillingGsmActionPerformed

    private void duvetsWidthQuiltingShrinkageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetsWidthQuiltingShrinkageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_duvetsWidthQuiltingShrinkageActionPerformed

    private void duvetsHeightQuiltiingShrinkageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetsHeightQuiltiingShrinkageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_duvetsHeightQuiltiingShrinkageActionPerformed

    private void duvetsPaddingWastageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetsPaddingWastageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_duvetsPaddingWastageActionPerformed

    private void duvetsUseCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetsUseCustomActionPerformed
        if (duvetsUseCustom.isSelected()) {
            duvetsCustomPanel.setVisible(true);
            duvetsSizeLable.setVisible(false);
            duvetSizeCombo.setVisible(false);
        } else {
            duvetsCustomPanel.setVisible(false);
            duvetsSizeLable.setVisible(true);
            duvetSizeCombo.setVisible(true);
        }
}//GEN-LAST:event_duvetsUseCustomActionPerformed

    private void duvetExportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duvetExportButtonActionPerformed
        //ading the quotation object
        QuationObject qObject = new QuationObject(
                "Duvets",
                duvetProductRangeCombo.getSelectedItem() + "",
                duvetFabricTypeCombo.getSelectedItem() + "",
                duvetsUseCustom.isSelected() == true ? duvetsCustomHeight.getText() + "X" + duvetsCustomWidth.getText() : duvetSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(duvetsGrossSellingPrice.getText().replaceAll(",", "")));

        //adding the costing summary object
        SummaryObject summaryObj = new SummaryObject(
                "Duvets",
                duvetProductRangeCombo.getSelectedItem() + "",
                duvetFabricTypeCombo.getSelectedItem() + "",
                duvetPaddingTypeCombo.getSelectedItem() + "",
                duvetsUseCustom.isSelected() == true ? duvetsCustomHeight.getText() + "X" + duvetsCustomWidth.getText() : duvetSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(duvetsToatalCost.getText().replaceAll(",", "")),
                Double.parseDouble(duvetsMarginField.getText().replaceAll(",", "")),
                Double.parseDouble(duvetsTaxField.getText().replaceAll(",", "")));

        //have to add data to this
        ArrayList<Map.Entry<String, String>> prodSpecs = new ArrayList<Map.Entry<String, String>>();
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Comforter Type", duvetTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Product Range", duvetProductRangeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Type", duvetFabricTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Size", duvetsUseCustom.isSelected() == true ? duvetsCustomWidth.getText() + "X" + duvetsCustomHeight.getText() : duvetSizeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Wastage", duvetsFabricWastage.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Type", duvetFiberTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Wastage", duvetFiberWastage.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Filling GSM", duvetFillingGsm.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Padding Type", duvetPaddingTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Width Quilting Shrinkage", duvetsWidthQuiltingShrinkage.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Height Quilting Shrinkage", duvetsHeightQuiltiingShrinkage.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Padding Wastage", duvetsPaddingWastage.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Lable", duvetsIncludeLable.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Tag", duvetsIncludeTag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include PE Bag", duvetsIncludePEBag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Non Woven Bag", duvetsIncludeNonWovenBag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Margin", duvetsMarginField.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Taxes", duvetsTaxField.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Other Costs", duvetsOtherCostVal.getText() + ""));

        ArrayList<Map.Entry<String, String>> costDescs = new ArrayList<Map.Entry<String, String>>();
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Cost", duvetsFabricCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Padding Cost", duvetsPaddingCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Cost", duvetsFiberCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Thread Cost", duvetsThreadCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Lable Cost", duvetsLableCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Tag Cost", duvetsTagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Non Woven Bag Cost", duvetsNonWovenBagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Piping Cost", duvetsPipingCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("PE Bag Cost", duvetsPEBagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Material Cost", duvetsTotalMaterialCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("POH", duvetsPOH.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Labour Cost", duvetsLabourCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Cost Per Unit", duvetsToatalCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Net Selling Price", duvetsNetSellingPrice.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Taxes", duvetsTaxes.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Gross Selling Price", duvetsGrossSellingPrice.getText()));

        ArrayList<Map.Entry<String, String>> manuSpecs = new ArrayList<Map.Entry<String, String>>();
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Cutting Width", duvetsFabricCutWidth.getText() + ""));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Cutting Height", duvetsFabricCutHeight.getText() + ""));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Weight", duvetsFiberWeight.getText() + ""));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("SMV Value", duvetsSMVValue.getText() + ""));


        try {
            int n = Integer.parseInt(quantity.getText());
            qObject.setQuantity(n);
            summaryObj.setQuantity(n);
            
            if(MainWindow.tempFaric!=null){
                Set keys = MainWindow.tempFaric.keySet();
                for(int i=0;i<keys.size();i++){
                    String key = (String) keys.toArray()[i];
                    if(MainWindow.globalFaric.containsKey(key)){
                        String sValue = (String)MainWindow.globalFaric.get(key);
                        Double value = Double.parseDouble(sValue);
                        String tempSValue = (String)MainWindow.tempFaric.get(key);
                        Double tempValue = Double.parseDouble(tempSValue) * n;
                        
                        value += tempValue;
                        
                        MainWindow.globalFaric.put(key, value);
                    }else{
                        String sValue = (String)MainWindow.tempFaric.get(key);
                        Double value = Double.parseDouble(sValue) * n;
                        MainWindow.globalFaric.put(key, value);
                    }
                }
            }
            
            if(MainWindow.tempPadding!=null){
                Set keys = MainWindow.tempPadding.keySet();
                for(int i=0;i<keys.size();i++){
                    String key = (String) keys.toArray()[i];
                    if(MainWindow.globalPadding.containsKey(key)){
                        String sValue = (String)MainWindow.globalPadding.get(key);
                        Double value = Double.parseDouble(sValue);
                        String tempSValue = (String)MainWindow.tempPadding.get(key);
                        Double tempValue = Double.parseDouble(tempSValue) * n;
                        
                        value += tempValue;
                        
                        MainWindow.globalPadding.put(key, value);
                    }else{
                        String sValue = (String)MainWindow.tempPadding.get(key);
                        Double value = Double.parseDouble(sValue) * n;
                        MainWindow.globalPadding.put(key, value);
                    }
                }
            }
            
            if(MainWindow.tempTaffata!=null){
                Set keys = MainWindow.tempTaffata.keySet();
                for(int i=0;i<keys.size();i++){
                    String key = (String) keys.toArray()[i];
                    if(MainWindow.globalTaffata.containsKey(key)){
                        String sValue = (String)MainWindow.globalTaffata.get(key);
                        Double value = Double.parseDouble(sValue);
                        String tempSValue = (String)MainWindow.tempTaffata.get(key);
                        Double tempValue = Double.parseDouble(tempSValue) * n;
                        
                        value += tempValue;
                        
                        MainWindow.globalTaffata.put(key, value);
                    }else{
                        String sValue = (String)MainWindow.tempTaffata.get(key);
                        Double value = Double.parseDouble(sValue) * n;
                        MainWindow.globalTaffata.put(key, value);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid quantity value");
            return;
        }


        ItemSummaryObject itemSumObj = new ItemSummaryObject("Duvet", summaryObj, prodSpecs, costDescs, manuSpecs);
        MainWindow.quotation.addQuatationObject(qObject, itemSumObj);


        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final AddOrderSuccess dialog = new AddOrderSuccess(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
}//GEN-LAST:event_duvetExportButtonActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton duvetExportButton;
    private javax.swing.JComboBox duvetFabricTypeCombo;
    private javax.swing.JComboBox duvetFiberTypeCombo;
    private javax.swing.JTextField duvetFiberWastage;
    private javax.swing.JTextField duvetFillingGsm;
    private javax.swing.JPanel duvetNormalBabyPanel;
    private javax.swing.JComboBox duvetPaddingTypeCombo;
    private javax.swing.JComboBox duvetProductRangeCombo;
    private javax.swing.JComboBox duvetSizeCombo;
    private javax.swing.JComboBox duvetTypeCombo;
    private javax.swing.JPanel duvetsCPUPanel;
    private javax.swing.JPanel duvetsCostingPanel;
    private javax.swing.JTextField duvetsCustomHeight;
    private javax.swing.JPanel duvetsCustomPanel;
    private javax.swing.JTextField duvetsCustomWidth;
    private javax.swing.JLabel duvetsFabricCost;
    private javax.swing.JLabel duvetsFabricCutHeight;
    private javax.swing.JLabel duvetsFabricCutWidth;
    private javax.swing.JTextField duvetsFabricWastage;
    private javax.swing.JLabel duvetsFiberCost;
    private javax.swing.JLabel duvetsFiberWeight;
    private javax.swing.JPanel duvetsGelFeatherPanel;
    private javax.swing.JLabel duvetsGrossSellingPrice;
    private javax.swing.JTextField duvetsHeightQuiltiingShrinkage;
    private javax.swing.JRadioButton duvetsIncludeLable;
    private javax.swing.JRadioButton duvetsIncludeNonWovenBag;
    private javax.swing.JRadioButton duvetsIncludePEBag;
    private javax.swing.JRadioButton duvetsIncludeTag;
    private javax.swing.JLabel duvetsLableCost;
    private javax.swing.JLabel duvetsLabourCost;
    private javax.swing.JTextField duvetsMarginField;
    private javax.swing.JLabel duvetsNetSellingPrice;
    private javax.swing.JLabel duvetsNonWovenBagCost;
    private javax.swing.JTextField duvetsOtherCostVal;
    private javax.swing.JLabel duvetsPEBagCost;
    private javax.swing.JLabel duvetsPOH;
    private javax.swing.JLabel duvetsPaddingCost;
    private javax.swing.JTextField duvetsPaddingWastage;
    private javax.swing.JLabel duvetsPipingCost;
    private javax.swing.JLabel duvetsSMVValue;
    private javax.swing.JLabel duvetsSizeLable;
    private javax.swing.JButton duvetsSubmitButton;
    private javax.swing.JLabel duvetsTagCost;
    private javax.swing.JTextField duvetsTaxField;
    private javax.swing.JLabel duvetsTaxes;
    private javax.swing.JLabel duvetsThreadCost;
    private javax.swing.JLabel duvetsToatalCost;
    private javax.swing.JLabel duvetsTotalMaterialCost;
    private javax.swing.JRadioButton duvetsUseCustom;
    private javax.swing.JTextField duvetsWidthQuiltingShrinkage;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel163;
    private javax.swing.JLabel jLabel164;
    private javax.swing.JLabel jLabel165;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel168;
    private javax.swing.JLabel jLabel169;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel174;
    private javax.swing.JLabel jLabel175;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel182;
    private javax.swing.JLabel jLabel183;
    private javax.swing.JLabel jLabel184;
    private javax.swing.JLabel jLabel185;
    private javax.swing.JLabel jLabel186;
    private javax.swing.JLabel jLabel187;
    private javax.swing.JLabel jLabel188;
    private javax.swing.JLabel jLabel189;
    private javax.swing.JLabel jLabel190;
    private javax.swing.JLabel jLabel191;
    private javax.swing.JLabel jLabel192;
    private javax.swing.JLabel jLabel193;
    private javax.swing.JLabel jLabel194;
    private javax.swing.JLabel jLabel309;
    private javax.swing.JLabel jLabel310;
    private javax.swing.JLabel jLabel311;
    private javax.swing.JLabel jLabel312;
    private javax.swing.JLabel jLabel313;
    private javax.swing.JLabel jLabel314;
    private javax.swing.JLabel jLabel340;
    private javax.swing.JLabel jLabel341;
    private javax.swing.JLabel jLabel342;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JTextField quantity;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new DuvetsCostingPanel());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
}
