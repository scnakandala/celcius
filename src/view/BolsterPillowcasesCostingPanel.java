/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BedSheetPanel.java
 *
 * Created on Apr 25, 2013, 1:53:11 AM
 */
package view;

import celcius.Config;
import excel.ItemSummaryObject;
import excel.QuationObject;
import excel.SummaryObject;
import java.awt.EventQueue;
import java.text.DecimalFormat;
import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logic.BedSheetLogic;
import logic.BolsterPillowcaseLogic;
import ui.helpers.ComboBoxRenderer;
import viewmodels.BolsterPillowcaseViewModel;

/**
 *
 * @author naka
 */
public class BolsterPillowcasesCostingPanel extends javax.swing.JPanel {

    /**
     * Creates new form BedSheetPanel
     */
    public BolsterPillowcasesCostingPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        bedSheetCostingPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bolsterPillowcaseProductRangeCombo = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        bolsterPillowcaseMaterialTypeCombo = new javax.swing.JComboBox();
        bolsterPillowcaseSizeCombo = new javax.swing.JComboBox();
        bolsterPillowcaseWastage = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        bedSheetSizeLable = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        bolsterPillowcaseUseCustom = new javax.swing.JRadioButton();
        bedSheetCustomPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        bolsterPillowcaseCustomDiameter = new javax.swing.JTextField();
        bolsterPillowcaseCustomLength = new javax.swing.JTextField();
        bolsterPillowcaseIncludeLable = new javax.swing.JRadioButton();
        bolsterPillowcaseIncludeTag = new javax.swing.JRadioButton();
        bolsterPillowcaseIncludePEBag = new javax.swing.JRadioButton();
        bolsterPillowcaseSubmitButton = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        bolsterPillowcaseMarginField = new javax.swing.JTextField();
        bolsterPillowcaseTaxField = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        bedsheetOtherCost = new javax.swing.JLabel();
        bolsterPillowcaseOtherCostVal = new javax.swing.JTextField();
        bolsterPillowcaseUseZipper = new javax.swing.JRadioButton();
        bolsterPillowcaseUseVelco = new javax.swing.JRadioButton();
        bedsheetOtherCost1 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        bedSheetCPUPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        bolsterPillowcaseSMVValue = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        bolsterPillowcaseFabricCost = new javax.swing.JLabel();
        bolsterPillowcaseThreadCost = new javax.swing.JLabel();
        bolsterPillowcaseLableCost = new javax.swing.JLabel();
        bolsterPillowcaseTagCost = new javax.swing.JLabel();
        bolsterPillowcasePEBagCost = new javax.swing.JLabel();
        bolsterPillowcasePOH = new javax.swing.JLabel();
        bolsterPillowcaseLabourCost = new javax.swing.JLabel();
        bolsterPillowcaseToatalCost = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        bolsterPillowcaseTotalMaterialCost = new javax.swing.JLabel();
        jLabel325 = new javax.swing.JLabel();
        jLabel326 = new javax.swing.JLabel();
        jLabel327 = new javax.swing.JLabel();
        bolsterPillowcaseNetSellingPrice = new javax.swing.JLabel();
        bolsterPillowcaseTaxes = new javax.swing.JLabel();
        bolsterPillowcaseGrossSellingPrice = new javax.swing.JLabel();
        bedSheetExportButton = new javax.swing.JButton();
        bolsterPillowcaseZipperVelcoCost = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        bedSheetCostingPanel.setMinimumSize(new java.awt.Dimension(500, 500));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel5.setText("Bolster Pillowcase Costing");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel6.setText("Select Product Range:");

        bolsterPillowcaseProductRangeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseProductRangeCombo.setModel(new javax.swing.DefaultComboBoxModel(BolsterPillowcaseLogic.getProductRanges()));
        bolsterPillowcaseProductRangeCombo.setRenderer(new ComboBoxRenderer(BolsterPillowcaseLogic.getProductRanges()));
        bolsterPillowcaseProductRangeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolsterPillowcaseProductRangeComboActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel7.setText("Select Material Type:");

        bolsterPillowcaseMaterialTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseMaterialTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(BolsterPillowcaseLogic.getMaterialTypes((String)bolsterPillowcaseProductRangeCombo.getSelectedItem())));
        bolsterPillowcaseMaterialTypeCombo.setRenderer(new ComboBoxRenderer(BolsterPillowcaseLogic.getMaterialTypes((String)bolsterPillowcaseProductRangeCombo.getSelectedItem())));

        bolsterPillowcaseSizeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseSizeCombo.setModel(new javax.swing.DefaultComboBoxModel(BolsterPillowcaseLogic.getBedSheetSizes()));
        bolsterPillowcaseSizeCombo.setRenderer(new ComboBoxRenderer(BolsterPillowcaseLogic.getBedSheetSizes()));

        bolsterPillowcaseWastage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseWastage.setText("3");
        bolsterPillowcaseWastage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolsterPillowcaseWastageActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel12.setText("%");

        bedSheetSizeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedSheetSizeLable.setText("Select Size:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel11.setText("Wastage:");

        bolsterPillowcaseUseCustom.setBackground(new java.awt.Color(204, 204, 204));
        bolsterPillowcaseUseCustom.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseUseCustom.setText("Use Custom Sizes");
        bolsterPillowcaseUseCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolsterPillowcaseUseCustomActionPerformed(evt);
            }
        });

        bedSheetCustomPanel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        bedSheetCustomPanel.setPreferredSize(new java.awt.Dimension(411, 206));
        bedSheetCustomPanel.setVisible(false);
        bedSheetCustomPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel9.setText("Diameter (inches) :");
        bedSheetCustomPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 16, -1, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel10.setText("Length (inches):");
        bedSheetCustomPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 52, -1, -1));

        bolsterPillowcaseCustomDiameter.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedSheetCustomPanel.add(bolsterPillowcaseCustomDiameter, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 11, 96, -1));

        bolsterPillowcaseCustomLength.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedSheetCustomPanel.add(bolsterPillowcaseCustomLength, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 49, 96, -1));

        bolsterPillowcaseIncludeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseIncludeLable.setText("Include Lable");
        bedSheetCustomPanel.add(bolsterPillowcaseIncludeLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 87, -1, -1));

        bolsterPillowcaseIncludeTag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseIncludeTag.setText("Include Tag");
        bedSheetCustomPanel.add(bolsterPillowcaseIncludeTag, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        bolsterPillowcaseIncludePEBag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseIncludePEBag.setText("Include PE Bag");
        bedSheetCustomPanel.add(bolsterPillowcaseIncludePEBag, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        bolsterPillowcaseSubmitButton.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseSubmitButton.setText("Find Cost Per Unit");
        bolsterPillowcaseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolsterPillowcaseSubmitButtonActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel30.setText("Margin:");

        jLabel55.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel55.setText("Taxes:");

        bolsterPillowcaseMarginField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseMarginField.setText(Config.profitMargin);

        bolsterPillowcaseTaxField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseTaxField.setText(Config.taxesRate);

        jLabel84.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel84.setText("%");

        jLabel123.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel123.setText("%");

        bedsheetOtherCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedsheetOtherCost.setText("Other costs");

        bolsterPillowcaseOtherCostVal.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseOtherCostVal.setText("0.00");
        bolsterPillowcaseTaxField.setText(Config.taxesRate);

        bolsterPillowcaseUseZipper.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseUseZipper.setSelected(true);
        bolsterPillowcaseUseZipper.setText("Use Zipper");
        bolsterPillowcaseUseZipper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolsterPillowcaseUseZipperActionPerformed(evt);
            }
        });

        bolsterPillowcaseUseVelco.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseUseVelco.setText("Use Velco");
        bolsterPillowcaseUseVelco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bolsterPillowcaseUseVelcoActionPerformed(evt);
            }
        });

        bedsheetOtherCost1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedsheetOtherCost1.setText("Quantity");

        quantity.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        quantity.setText("1");
        bolsterPillowcaseTaxField.setText(Config.taxesRate);

        javax.swing.GroupLayout bedSheetCostingPanelLayout = new javax.swing.GroupLayout(bedSheetCostingPanel);
        bedSheetCostingPanel.setLayout(bedSheetCostingPanelLayout);
        bedSheetCostingPanelLayout.setHorizontalGroup(
            bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel55)
                    .addComponent(bedsheetOtherCost)
                    .addComponent(bedsheetOtherCost1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bolsterPillowcaseOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bolsterPillowcaseTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bolsterPillowcaseMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel123)
                    .addComponent(jLabel84))
                .addContainerGap(266, Short.MAX_VALUE))
            .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(29, 29, 29)
                        .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bolsterPillowcaseProductRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bolsterPillowcaseMaterialTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bolsterPillowcaseSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bedSheetSizeLable)
                            .addComponent(jLabel11))
                        .addGap(132, 132, 132)
                        .addComponent(bolsterPillowcaseWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(bolsterPillowcaseUseCustom, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(bedSheetCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(bolsterPillowcaseUseZipper))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(bolsterPillowcaseUseVelco))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel5))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(bolsterPillowcaseSubmitButton)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        bedSheetCostingPanelLayout.setVerticalGroup(
            bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bedSheetCostingPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel6))
                    .addComponent(bolsterPillowcaseProductRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7))
                    .addComponent(bolsterPillowcaseMaterialTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(bedSheetSizeLable))
                    .addComponent(bolsterPillowcaseSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(bolsterPillowcaseWastage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bolsterPillowcaseUseZipper)
                    .addComponent(bolsterPillowcaseUseVelco))
                .addGap(10, 10, 10)
                .addComponent(bolsterPillowcaseUseCustom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bedSheetCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(bolsterPillowcaseMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel84))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(bolsterPillowcaseTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel123))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedsheetOtherCost)
                    .addComponent(bolsterPillowcaseOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedsheetOtherCost1)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bolsterPillowcaseSubmitButton)
                .addGap(173, 173, 173))
        );

        bedSheetCPUPanel.setVisible(false);
        bedSheetCPUPanel.setPreferredSize(new java.awt.Dimension(500, 800));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel24.setText("SMV Value:");

        bolsterPillowcaseSMVValue.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseSMVValue.setText("0.00");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel25.setText("Production Parameters");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jLabel25)
                .addContainerGap(118, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bolsterPillowcaseSMVValue)
                .addGap(46, 46, 46))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(bolsterPillowcaseSMVValue))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel14.setText("Fabric Cost:");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel15.setText("Thread Cost:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel13.setText("Lable Cost:");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel16.setText("Tag Cost:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel18.setText("PE Bag Cost:");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("POH:");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Labour Cost:");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel21.setText("Toatal Cost Per Unit:");

        bolsterPillowcaseFabricCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseFabricCost.setText("0.00");

        bolsterPillowcaseThreadCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseThreadCost.setText("0.00");

        bolsterPillowcaseLableCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseLableCost.setText("0.00");

        bolsterPillowcaseTagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseTagCost.setText("0.00");

        bolsterPillowcasePEBagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcasePEBagCost.setText("0.00");

        bolsterPillowcasePOH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bolsterPillowcasePOH.setText("0.00");

        bolsterPillowcaseLabourCost.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bolsterPillowcaseLabourCost.setText("0.00");

        bolsterPillowcaseToatalCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bolsterPillowcaseToatalCost.setText("0.00");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel22.setText("Cost Per Unit");

        jLabel77.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel77.setText("Total Material Cost");

        bolsterPillowcaseTotalMaterialCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bolsterPillowcaseTotalMaterialCost.setText("0.00");

        jLabel325.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel325.setText("Net Selling Price:");

        jLabel326.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel326.setText("Taxes:");

        jLabel327.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel327.setText("Gross Selling Price:");

        bolsterPillowcaseNetSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bolsterPillowcaseNetSellingPrice.setText("0.00");

        bolsterPillowcaseTaxes.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bolsterPillowcaseTaxes.setText("0.00");

        bolsterPillowcaseGrossSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bolsterPillowcaseGrossSellingPrice.setText("0.00");

        bedSheetExportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/export.png"))); // NOI18N
        bedSheetExportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedSheetExportButtonActionPerformed(evt);
            }
        });

        bolsterPillowcaseZipperVelcoCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bolsterPillowcaseZipperVelcoCost.setText("0.00");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel17.setText("Zipper/Velco");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel22))
                    .addComponent(bedSheetExportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(185, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bolsterPillowcaseZipperVelcoCost))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel327)
                            .addComponent(jLabel326)
                            .addComponent(jLabel325)
                            .addComponent(jLabel21)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16)
                            .addComponent(jLabel77)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bolsterPillowcaseToatalCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseLabourCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcasePOH, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcasePEBagCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseTagCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseLableCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseThreadCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseNetSellingPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseGrossSellingPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseFabricCost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseTaxes, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bolsterPillowcaseTotalMaterialCost, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(46, 46, 46))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(bolsterPillowcaseFabricCost)
                        .addGap(11, 11, 11)
                        .addComponent(bolsterPillowcaseThreadCost)
                        .addGap(11, 11, 11)
                        .addComponent(bolsterPillowcaseLableCost)
                        .addGap(11, 11, 11)
                        .addComponent(bolsterPillowcaseTagCost)
                        .addGap(11, 11, 11)
                        .addComponent(bolsterPillowcaseZipperVelcoCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bolsterPillowcasePEBagCost)
                        .addGap(18, 18, 18)
                        .addComponent(bolsterPillowcaseTotalMaterialCost)
                        .addGap(28, 28, 28)
                        .addComponent(bolsterPillowcasePOH)
                        .addGap(13, 13, 13)
                        .addComponent(bolsterPillowcaseLabourCost)
                        .addGap(23, 23, 23)
                        .addComponent(bolsterPillowcaseToatalCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bolsterPillowcaseNetSellingPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bolsterPillowcaseTaxes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bolsterPillowcaseGrossSellingPrice))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22))
                            .addComponent(bedSheetExportButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel15)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel13)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel16)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel77)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel20)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel19)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel325)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel326)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel327)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bedSheetCPUPanelLayout = new javax.swing.GroupLayout(bedSheetCPUPanel);
        bedSheetCPUPanel.setLayout(bedSheetCPUPanelLayout);
        bedSheetCPUPanelLayout.setHorizontalGroup(
            bedSheetCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bedSheetCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bedSheetCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bedSheetCPUPanelLayout.setVerticalGroup(
            bedSheetCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bedSheetCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bedSheetCostingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bedSheetCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bedSheetCostingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(bedSheetCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bolsterPillowcaseProductRangeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolsterPillowcaseProductRangeComboActionPerformed
        bolsterPillowcaseMaterialTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(BedSheetLogic.getMaterialTypes((String) bolsterPillowcaseProductRangeCombo.getSelectedItem())));
}//GEN-LAST:event_bolsterPillowcaseProductRangeComboActionPerformed

    private void bolsterPillowcaseWastageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolsterPillowcaseWastageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_bolsterPillowcaseWastageActionPerformed

    private void bolsterPillowcaseUseCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolsterPillowcaseUseCustomActionPerformed
        // TODO add your handling code here:
        if (bolsterPillowcaseUseCustom.isSelected()) {
            bedSheetCustomPanel.setVisible(true);
            bolsterPillowcaseSizeCombo.setVisible(false);
            bedSheetSizeLable.setVisible(false);
        } else {
            bedSheetCustomPanel.setVisible(false);
            bolsterPillowcaseSizeCombo.setVisible(true);
            bedSheetSizeLable.setVisible(true);
        }
    }//GEN-LAST:event_bolsterPillowcaseUseCustomActionPerformed

    private void bolsterPillowcaseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolsterPillowcaseSubmitButtonActionPerformed
        BolsterPillowcaseViewModel bCost = new BolsterPillowcaseViewModel();
        String productRange = (String) bolsterPillowcaseProductRangeCombo.getSelectedItem();
        bCost.setProductRange(productRange);

        String materialType = (String) bolsterPillowcaseMaterialTypeCombo.getSelectedItem();
        bCost.setMaterialType(materialType);

        String size = (String) bolsterPillowcaseSizeCombo.getSelectedItem();
        bCost.setSize(size);

        try {
            double wastage = Double.parseDouble(bolsterPillowcaseWastage.getText());
            if (wastage < 0 || wastage > 10) {
                JOptionPane.showMessageDialog(this, "Wastage should be between 0 and 10 %");
                return;
            }
            bCost.setWastage(wastage);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid wastage value");
            return;
        }

        try {
            double otherCost = Double.parseDouble(bolsterPillowcaseOtherCostVal.getText());
            if (otherCost < 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
                return;
            }
            bCost.setOtherCost(otherCost);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
            return;
        }

        try {
            double margin = Double.parseDouble(bolsterPillowcaseMarginField.getText());
            if (margin < 0) {
                JOptionPane.showMessageDialog(this, "Profit margin should be a positive value");
                return;
            }
            bCost.setMargin(margin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid margin value");
            return;
        }

        try {
            double taxRate = Double.parseDouble(bolsterPillowcaseTaxField.getText());
            if (taxRate < 0) {
                JOptionPane.showMessageDialog(this, "Tax rate should be a positive value");
                return;
            }
            bCost.setTaxRate(taxRate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid tax rate value");
            return;
        }

        boolean useCustom = bolsterPillowcaseUseCustom.isSelected();
        if (useCustom) {
            bCost.setIsCustom(useCustom);
            try {
                Double diameter = Double.parseDouble(bolsterPillowcaseCustomDiameter.getText());
                if (diameter <= 0 || diameter > 120) {
                    JOptionPane.showMessageDialog(this, "Diameter should be between 0 and 120");
                    return;
                }
                bCost.setCustomDiameter(diameter);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid diameter value");
                return;
            }

            try {
                Double length = Double.parseDouble(bolsterPillowcaseCustomLength.getText());
                if (length <= 0 || length > 120) {
                    JOptionPane.showMessageDialog(this, "Length should be between 0 and 120");
                    return;
                }
                bCost.setCustomLength(length);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid height value");
                return;
            }

            bCost.setIncludeLable(bolsterPillowcaseIncludeLable.isSelected());
            bCost.setIncludeTag(bolsterPillowcaseIncludeTag.isSelected());
            bCost.setIncludePEBag(bolsterPillowcaseIncludePEBag.isSelected());
        }
        DecimalFormat format = new DecimalFormat();
        format.setMaximumFractionDigits(2);
        format.setMinimumFractionDigits(2);

        BolsterPillowcaseViewModel bReturn = BolsterPillowcaseLogic.getCostPerUnit(bCost);
        bolsterPillowcaseFabricCost.setText(format.format(bReturn.getFabricCost()) + "");
        bolsterPillowcaseThreadCost.setText(format.format(bReturn.getThreadCost()) + "");
        bolsterPillowcaseLableCost.setText(format.format(bReturn.getLableCost()) + "");
        bolsterPillowcaseTagCost.setText(format.format(bReturn.getTagCost()) + "");
        bolsterPillowcasePEBagCost.setText(format.format(bReturn.getPEBagCost()) + "");
        bolsterPillowcaseZipperVelcoCost.setText(format.format(bReturn.getZipperVelcoCost()) + "");
        bolsterPillowcasePOH.setText(format.format(bReturn.getPohCost()) + "");
        bolsterPillowcaseLabourCost.setText(format.format(bReturn.getLabourCost()) + "");
        bolsterPillowcaseToatalCost.setText(format.format(bReturn.getTotalCost()) + "");
        bolsterPillowcaseSMVValue.setText(format.format(bReturn.getSmvValue()));
        bolsterPillowcaseTotalMaterialCost.setText(format.format(bReturn.getTotalMaterialCost()));
        bolsterPillowcaseNetSellingPrice.setText(format.format(bReturn.getNetSellingPrice()));
        bolsterPillowcaseTaxes.setText(format.format(bReturn.getTaxes()));
        bolsterPillowcaseGrossSellingPrice.setText(format.format(bReturn.getGrossSellingPrice()));

        bedSheetCPUPanel.setVisible(true);
}//GEN-LAST:event_bolsterPillowcaseSubmitButtonActionPerformed

    private void bedSheetExportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedSheetExportButtonActionPerformed
        //ading the quotation object
        QuationObject qObject = new QuationObject(
                "Bolster Pillowcase",
                bolsterPillowcaseProductRangeCombo.getSelectedItem() + "",
                bolsterPillowcaseMaterialTypeCombo.getSelectedItem() + "",
                bolsterPillowcaseUseCustom.isSelected() == true ? bolsterPillowcaseCustomDiameter.getText() + "X" + bolsterPillowcaseCustomLength.getText() : bolsterPillowcaseSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(bolsterPillowcaseGrossSellingPrice.getText().replaceAll(",", "")));

        //adding the costing summary object
        SummaryObject summaryObj = new SummaryObject(
                "Bolster Pillowcase",
                bolsterPillowcaseProductRangeCombo.getSelectedItem() + "",
                bolsterPillowcaseMaterialTypeCombo.getSelectedItem() + "",
                "",
                bolsterPillowcaseUseCustom.isSelected() == true ? bolsterPillowcaseCustomDiameter.getText() + "X" + bolsterPillowcaseCustomLength.getText() : bolsterPillowcaseSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(bolsterPillowcaseToatalCost.getText().replaceAll(",", "")),
                Double.parseDouble(bolsterPillowcaseMarginField.getText().replaceAll(",", "")),
                Double.parseDouble(bolsterPillowcaseTaxField.getText().replaceAll(",", "")));

        //have to add data to this
        ArrayList<Map.Entry<String, String>> prodSpecs = new ArrayList<Map.Entry<String, String>>();
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Product Range", bolsterPillowcaseProductRangeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Material Type", bolsterPillowcaseMaterialTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Size", bolsterPillowcaseUseCustom.isSelected() == true ? bolsterPillowcaseCustomDiameter.getText() + "X" + bolsterPillowcaseCustomLength.getText() : bolsterPillowcaseSizeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Wastage", bolsterPillowcaseWastage.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Use Zipper", bolsterPillowcaseUseZipper.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Use Velco", bolsterPillowcaseUseVelco.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Lable", bolsterPillowcaseIncludeLable.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Tag", bolsterPillowcaseIncludeTag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include PE Bag", bolsterPillowcaseIncludePEBag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Margin", bolsterPillowcaseMarginField.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Taxes", bolsterPillowcaseTaxField.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Other Costs", bolsterPillowcaseOtherCostVal.getText()));

        ArrayList<Map.Entry<String, String>> costDescs = new ArrayList<Map.Entry<String, String>>();
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Cost", bolsterPillowcaseFabricCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Thread Cost", bolsterPillowcaseThreadCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Lable Cost", bolsterPillowcaseLableCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Tag Cost", bolsterPillowcaseTagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Zipper/Velco Cost", bolsterPillowcaseZipperVelcoCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("PE Bag Cost", bolsterPillowcasePEBagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Material Cost", bolsterPillowcaseTotalMaterialCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("POH", bolsterPillowcasePOH.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Labour Cost", bolsterPillowcaseLabourCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Cost Per Unit", bolsterPillowcaseToatalCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Net Selling Price", bolsterPillowcaseNetSellingPrice.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Taxes", bolsterPillowcaseTaxes.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Gross Selling Price", bolsterPillowcaseGrossSellingPrice.getText()));

        ArrayList<Map.Entry<String, String>> manuSpecs = new ArrayList<Map.Entry<String, String>>();
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("SMV", bolsterPillowcaseSMVValue.getText()));

        
        try {
            int n = Integer.parseInt(quantity.getText());
            qObject.setQuantity(n);
            summaryObj.setQuantity(n);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid quantity value");
            return;
        }

        
        
        ItemSummaryObject itemSumObj = new ItemSummaryObject("Bolster Pillowcase", summaryObj, prodSpecs, costDescs, manuSpecs);
        MainWindow.quotation.addQuatationObject(qObject, itemSumObj);


        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final AddOrderSuccess dialog = new AddOrderSuccess(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_bedSheetExportButtonActionPerformed

    private void bolsterPillowcaseUseZipperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolsterPillowcaseUseZipperActionPerformed
        if (bolsterPillowcaseUseZipper.isSelected()) {
            bolsterPillowcaseUseVelco.setSelected(false);
        } else {
            bolsterPillowcaseUseVelco.setSelected(true);
        }
    }//GEN-LAST:event_bolsterPillowcaseUseZipperActionPerformed

    private void bolsterPillowcaseUseVelcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bolsterPillowcaseUseVelcoActionPerformed
        if (bolsterPillowcaseUseVelco.isSelected()) {
            bolsterPillowcaseUseZipper.setSelected(false);
        } else {
            bolsterPillowcaseUseZipper.setSelected(true);
        }
    }//GEN-LAST:event_bolsterPillowcaseUseVelcoActionPerformed

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new BolsterPillowcasesCostingPanel());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bedSheetCPUPanel;
    private javax.swing.JPanel bedSheetCostingPanel;
    private javax.swing.JPanel bedSheetCustomPanel;
    private javax.swing.JButton bedSheetExportButton;
    private javax.swing.JLabel bedSheetSizeLable;
    private javax.swing.JLabel bedsheetOtherCost;
    private javax.swing.JLabel bedsheetOtherCost1;
    private javax.swing.JTextField bolsterPillowcaseCustomDiameter;
    private javax.swing.JTextField bolsterPillowcaseCustomLength;
    private javax.swing.JLabel bolsterPillowcaseFabricCost;
    private javax.swing.JLabel bolsterPillowcaseGrossSellingPrice;
    private javax.swing.JRadioButton bolsterPillowcaseIncludeLable;
    private javax.swing.JRadioButton bolsterPillowcaseIncludePEBag;
    private javax.swing.JRadioButton bolsterPillowcaseIncludeTag;
    private javax.swing.JLabel bolsterPillowcaseLableCost;
    private javax.swing.JLabel bolsterPillowcaseLabourCost;
    private javax.swing.JTextField bolsterPillowcaseMarginField;
    private javax.swing.JComboBox bolsterPillowcaseMaterialTypeCombo;
    private javax.swing.JLabel bolsterPillowcaseNetSellingPrice;
    private javax.swing.JTextField bolsterPillowcaseOtherCostVal;
    private javax.swing.JLabel bolsterPillowcasePEBagCost;
    private javax.swing.JLabel bolsterPillowcasePOH;
    private javax.swing.JComboBox bolsterPillowcaseProductRangeCombo;
    private javax.swing.JLabel bolsterPillowcaseSMVValue;
    private javax.swing.JComboBox bolsterPillowcaseSizeCombo;
    private javax.swing.JButton bolsterPillowcaseSubmitButton;
    private javax.swing.JLabel bolsterPillowcaseTagCost;
    private javax.swing.JTextField bolsterPillowcaseTaxField;
    private javax.swing.JLabel bolsterPillowcaseTaxes;
    private javax.swing.JLabel bolsterPillowcaseThreadCost;
    private javax.swing.JLabel bolsterPillowcaseToatalCost;
    private javax.swing.JLabel bolsterPillowcaseTotalMaterialCost;
    private javax.swing.JRadioButton bolsterPillowcaseUseCustom;
    private javax.swing.JRadioButton bolsterPillowcaseUseVelco;
    private javax.swing.JRadioButton bolsterPillowcaseUseZipper;
    private javax.swing.JTextField bolsterPillowcaseWastage;
    private javax.swing.JLabel bolsterPillowcaseZipperVelcoCost;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel325;
    private javax.swing.JLabel jLabel326;
    private javax.swing.JLabel jLabel327;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField quantity;
    // End of variables declaration//GEN-END:variables
}
