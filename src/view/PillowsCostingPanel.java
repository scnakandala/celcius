package view;

import celcius.Config;
import excel.ItemSummaryObject;
import excel.QuationObject;
import excel.SummaryObject;
import java.awt.EventQueue;
import java.text.DecimalFormat;
import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logic.PillowLogic;
import ui.helpers.ComboBoxRenderer;
import viewmodels.PillowsViewModel;

/**
 *
 * @author naka
 */
public class PillowsCostingPanel extends javax.swing.JPanel {

    /**
     * Creates new form PillowsCostingPanel
     */
    public PillowsCostingPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pillowsCostingPanel = new javax.swing.JPanel();
        jLabel228 = new javax.swing.JLabel();
        jLabel229 = new javax.swing.JLabel();
        pillowRangeCombo = new javax.swing.JComboBox();
        pillowTypeCombo = new javax.swing.JComboBox();
        pillowFabricWastage = new javax.swing.JTextField();
        jLabel230 = new javax.swing.JLabel();
        jLabel231 = new javax.swing.JLabel();
        jLabel232 = new javax.swing.JLabel();
        pillowsCustomPanel = new javax.swing.JPanel();
        jLabel233 = new javax.swing.JLabel();
        jLabel234 = new javax.swing.JLabel();
        pillowsCustomWidth = new javax.swing.JTextField();
        pillowsCustomHeight = new javax.swing.JTextField();
        pillowsIncludeLable = new javax.swing.JRadioButton();
        pillowsIncludeTag = new javax.swing.JRadioButton();
        pillowsIncludePEBag = new javax.swing.JRadioButton();
        jLabel236 = new javax.swing.JLabel();
        pillowsCustomFiberWeight = new javax.swing.JTextField();
        jLabel235 = new javax.swing.JLabel();
        pillowFabricTypeCombo = new javax.swing.JComboBox();
        pillowsSizeLable = new javax.swing.JLabel();
        pillowSizeCombo = new javax.swing.JComboBox();
        pillowsSubmitButton = new javax.swing.JButton();
        pillowsUseCustom = new javax.swing.JRadioButton();
        pillowCustomFiberButton = new javax.swing.JRadioButton();
        pillowFiberTypeCombo = new javax.swing.JComboBox();
        jLabel237 = new javax.swing.JLabel();
        jLabel246 = new javax.swing.JLabel();
        pillowFiberWastage = new javax.swing.JTextField();
        jLabel247 = new javax.swing.JLabel();
        jLabel313 = new javax.swing.JLabel();
        jLabel314 = new javax.swing.JLabel();
        pillowsTaxField = new javax.swing.JTextField();
        jLabel315 = new javax.swing.JLabel();
        jLabel316 = new javax.swing.JLabel();
        pillowsMarginField = new javax.swing.JTextField();
        jLabel317 = new javax.swing.JLabel();
        pillowsOtherCostVal = new javax.swing.JTextField();
        jLabel318 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        pillowsCPUPanel = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jLabel208 = new javax.swing.JLabel();
        jLabel210 = new javax.swing.JLabel();
        jLabel211 = new javax.swing.JLabel();
        jLabel212 = new javax.swing.JLabel();
        jLabel213 = new javax.swing.JLabel();
        pillowsFiberWeight = new javax.swing.JLabel();
        pillowsSMVValue = new javax.swing.JLabel();
        pillowsFabricCutHeight = new javax.swing.JLabel();
        pillowsFabricCutWidth = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jLabel214 = new javax.swing.JLabel();
        jLabel215 = new javax.swing.JLabel();
        jLabel216 = new javax.swing.JLabel();
        jLabel217 = new javax.swing.JLabel();
        jLabel218 = new javax.swing.JLabel();
        pillowsLabourCost = new javax.swing.JLabel();
        pillowsFiberCost = new javax.swing.JLabel();
        pillowsThreadCost = new javax.swing.JLabel();
        pillowsTagCost = new javax.swing.JLabel();
        pillowsLableCost = new javax.swing.JLabel();
        jLabel220 = new javax.swing.JLabel();
        jLabel221 = new javax.swing.JLabel();
        jLabel222 = new javax.swing.JLabel();
        jLabel224 = new javax.swing.JLabel();
        pillowsPOH = new javax.swing.JLabel();
        jLabel225 = new javax.swing.JLabel();
        jLabel226 = new javax.swing.JLabel();
        pillowsPEBagCost = new javax.swing.JLabel();
        pillowsTotalMaterialCost = new javax.swing.JLabel();
        pillowsFabricCost = new javax.swing.JLabel();
        jLabel227 = new javax.swing.JLabel();
        pillowsPipingCost = new javax.swing.JLabel();
        pillowsToatalCost = new javax.swing.JLabel();
        jLabel343 = new javax.swing.JLabel();
        jLabel344 = new javax.swing.JLabel();
        jLabel345 = new javax.swing.JLabel();
        pillowsNetSellingPrice = new javax.swing.JLabel();
        pillowsTaxes = new javax.swing.JLabel();
        pillowsGrossSellingPrice = new javax.swing.JLabel();
        pillowsExportButton = new javax.swing.JButton();

        pillowsCostingPanel.setPreferredSize(new java.awt.Dimension(556, 600));

        jLabel228.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel228.setText("Pillows Costing");

        jLabel229.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel229.setText("Select Product Range:");

        pillowRangeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowRangeCombo.setModel(new javax.swing.DefaultComboBoxModel(PillowLogic.getProductRanges()));
        pillowRangeCombo.setRenderer(new ComboBoxRenderer(PillowLogic.getProductRanges()));
        pillowRangeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowRangeComboActionPerformed(evt);
            }
        });

        pillowTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(PillowLogic.getPillowTypes((String)pillowRangeCombo.getSelectedItem())));
        pillowTypeCombo.setRenderer(new ComboBoxRenderer(PillowLogic.getPillowTypes((String)pillowRangeCombo.getSelectedItem())));
        pillowTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowTypeComboActionPerformed(evt);
            }
        });

        pillowFabricWastage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowFabricWastage.setText("3");
        pillowFabricWastage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowFabricWastageActionPerformed(evt);
            }
        });

        jLabel230.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel230.setText("%");

        jLabel231.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel231.setText("Select Pillow Type:");

        jLabel232.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel232.setText("Fabric Wastage:");

        jLabel233.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel233.setText("Width (inches) :");

        jLabel234.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel234.setText("Height (inches):");

        pillowsCustomWidth.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        pillowsCustomHeight.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        pillowsIncludeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsIncludeLable.setText("Include Lable");

        pillowsIncludeTag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsIncludeTag.setText("Include Tag");

        pillowsIncludePEBag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsIncludePEBag.setText("Include PE Bag");

        jLabel236.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel236.setText("Custom Fiber Weight(kg):");

        pillowsCustomFiberWeight.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsCustomFiberWeight.setText("0.0");

        javax.swing.GroupLayout pillowsCustomPanelLayout = new javax.swing.GroupLayout(pillowsCustomPanel);
        pillowsCustomPanel.setLayout(pillowsCustomPanelLayout);
        pillowsCustomPanelLayout.setHorizontalGroup(
            pillowsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pillowsCustomPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pillowsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pillowsIncludeTag)
                    .addComponent(pillowsIncludePEBag)
                    .addGroup(pillowsCustomPanelLayout.createSequentialGroup()
                        .addGroup(pillowsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel233)
                            .addComponent(jLabel234)
                            .addComponent(pillowsIncludeLable)
                            .addComponent(jLabel236))
                        .addGap(100, 100, 100)
                        .addGroup(pillowsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pillowsCustomWidth, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(pillowsCustomHeight)
                            .addComponent(pillowsCustomFiberWeight))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        pillowsCustomPanelLayout.setVerticalGroup(
            pillowsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pillowsCustomPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pillowsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pillowsCustomPanelLayout.createSequentialGroup()
                        .addComponent(pillowsCustomWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowsCustomHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pillowsCustomPanelLayout.createSequentialGroup()
                        .addComponent(jLabel233)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel234)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pillowsCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel236)
                            .addComponent(pillowsCustomFiberWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                .addComponent(pillowsIncludeLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pillowsIncludeTag)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pillowsIncludePEBag)
                .addContainerGap())
        );

        jLabel235.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel235.setText("Select Fabric Type:");

        pillowFabricTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowFabricTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(PillowLogic.getMaterialTypes((String)pillowRangeCombo.getSelectedItem())));
        pillowFabricTypeCombo.setRenderer(new ComboBoxRenderer(PillowLogic.getMaterialTypes((String)pillowRangeCombo.getSelectedItem())));
        pillowFabricTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowFabricTypeComboActionPerformed(evt);
            }
        });

        pillowsSizeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsSizeLable.setText("Select Size:");

        pillowSizeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowSizeCombo.setModel(new javax.swing.DefaultComboBoxModel(PillowLogic.getPillowSizes((String)pillowRangeCombo.getSelectedItem(),(String)pillowTypeCombo.getSelectedItem())));
        pillowSizeCombo.setRenderer(new ComboBoxRenderer(PillowLogic.getPillowSizes((String)pillowRangeCombo.getSelectedItem(),(String)pillowTypeCombo.getSelectedItem())));

        pillowsSubmitButton.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsSubmitButton.setText("Find Cost Per Unit");
        pillowsSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowsSubmitButtonActionPerformed(evt);
            }
        });

        pillowsUseCustom.setBackground(new java.awt.Color(204, 204, 204));
        pillowsUseCustom.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsUseCustom.setText("Use Custom Sizes");
        pillowsUseCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowsUseCustomActionPerformed(evt);
            }
        });

        pillowCustomFiberButton.setBackground(new java.awt.Color(204, 204, 204));
        pillowCustomFiberButton.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowCustomFiberButton.setText("Custom Fiber Selection");
        pillowCustomFiberButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        pillowCustomFiberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowCustomFiberButtonActionPerformed(evt);
            }
        });

        pillowFiberTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowFiberTypeCombo.setModel(new DefaultComboBoxModel(PillowLogic.getFiberTypes((String)pillowRangeCombo.getSelectedItem())));
        pillowFiberTypeCombo.setRenderer(new ComboBoxRenderer(PillowLogic.getFiberTypes((String)pillowRangeCombo.getSelectedItem())));
        pillowFiberTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowFiberTypeComboActionPerformed(evt);
            }
        });

        jLabel237.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel237.setText("Select Fiber Type");

        jLabel246.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel246.setText("Fiber Wastage:");

        pillowFiberWastage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowFiberWastage.setText("3");
        pillowFiberWastage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowFiberWastageActionPerformed(evt);
            }
        });

        jLabel247.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel247.setText("%");

        jLabel313.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel313.setText("Margin:");

        jLabel314.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel314.setText("Taxes:");

        pillowsTaxField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsTaxField.setText(Config.taxesRate);

        jLabel315.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel315.setText("%");

        jLabel316.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel316.setText("%");

        pillowsMarginField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsMarginField.setText(Config.profitMargin);

        jLabel317.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel317.setText("Other cost:");

        pillowsOtherCostVal.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsOtherCostVal.setText("0.0");
        pillowsTaxField.setText(Config.taxesRate);

        jLabel318.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel318.setText("Quantity");

        quantity.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        quantity.setText("1");
        pillowsTaxField.setText(Config.taxesRate);

        javax.swing.GroupLayout pillowsCostingPanelLayout = new javax.swing.GroupLayout(pillowsCostingPanel);
        pillowsCostingPanel.setLayout(pillowsCostingPanelLayout);
        pillowsCostingPanelLayout.setHorizontalGroup(
            pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel228))
                    .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pillowsSizeLable)
                                    .addComponent(jLabel235)
                                    .addComponent(jLabel231)
                                    .addComponent(jLabel229)
                                    .addComponent(jLabel232)
                                    .addComponent(jLabel246)
                                    .addComponent(jLabel237)
                                    .addComponent(pillowsUseCustom))
                                .addGap(72, 72, 72)
                                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                                        .addComponent(pillowFiberWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel247))
                                    .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(pillowFiberTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pillowTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pillowRangeCombo, 0, 209, Short.MAX_VALUE)
                                        .addComponent(pillowSizeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pillowFabricTypeCombo, 0, 203, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pillowsCostingPanelLayout.createSequentialGroup()
                                            .addComponent(pillowFabricWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel230))
                                        .addComponent(pillowCustomFiberButton))))
                            .addComponent(pillowsCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                                        .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel314)
                                            .addComponent(jLabel313)
                                            .addComponent(jLabel317))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                                                .addComponent(pillowsTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel315))
                                            .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                                                .addComponent(pillowsMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel316))
                                            .addComponent(pillowsOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel318)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(17, 17, 17)))
                                .addGap(121, 121, 121)))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(pillowsSubmitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pillowsCostingPanelLayout.setVerticalGroup(
            pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel228)
                .addGap(10, 10, 10)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel229)
                    .addComponent(pillowRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel231)
                    .addComponent(pillowTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel235)
                    .addComponent(pillowFabricTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pillowsSizeLable)
                    .addComponent(pillowSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                        .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel232)
                            .addComponent(pillowFabricWastage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel230))
                        .addGap(24, 24, 24))
                    .addGroup(pillowsCostingPanelLayout.createSequentialGroup()
                        .addComponent(pillowCustomFiberButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pillowFiberTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel237))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel246)
                    .addComponent(pillowFiberWastage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel247))
                .addGap(18, 18, 18)
                .addComponent(pillowsUseCustom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pillowsCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel313)
                    .addComponent(pillowsMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel316))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(pillowsTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel314)
                    .addComponent(jLabel315))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel317)
                    .addComponent(pillowsOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pillowsCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel318)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pillowsSubmitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pillowsCustomPanel.setVisible(false);

        jLabel208.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel208.setText("Fabric Cutting Height:");

        jLabel210.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel210.setText("SMV Value:");

        jLabel211.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel211.setText("Production Parameters");

        jLabel212.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel212.setText("Fabric Cutting Width:");

        jLabel213.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel213.setText("Fiber Weight");

        pillowsFiberWeight.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsFiberWeight.setText("0.00");

        pillowsSMVValue.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsSMVValue.setText("0.00");

        pillowsFabricCutHeight.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsFabricCutHeight.setText("0.00");

        pillowsFabricCutWidth.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsFabricCutWidth.setText("0.00");

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel212)
                            .addComponent(jLabel208)
                            .addComponent(jLabel213))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 231, Short.MAX_VALUE)
                        .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pillowsFiberWeight, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pillowsSMVValue, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pillowsFabricCutHeight, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pillowsFabricCutWidth, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(48, 48, 48))
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addComponent(jLabel210)
                        .addContainerGap(363, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel211)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel36Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel211, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel212)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel208)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel213)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel210))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pillowsFabricCutWidth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowsFabricCutHeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowsFiberWeight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowsSMVValue)))
                .addContainerGap())
        );

        jLabel214.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel214.setText("PE Bag Cost:");

        jLabel215.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel215.setText("Cost Per Unit");

        jLabel216.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel216.setText("Thread Cost:");

        jLabel217.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel217.setText("Labour Cost:");

        jLabel218.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel218.setText("Piping Cost:");

        pillowsLabourCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsLabourCost.setText("0.00");

        pillowsFiberCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsFiberCost.setText("0.00");

        pillowsThreadCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsThreadCost.setText("0.00");

        pillowsTagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsTagCost.setText("0.00");

        pillowsLableCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsLableCost.setText("0.00");

        jLabel220.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel220.setText("POH:");

        jLabel221.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel221.setText("Toatal Cost Per Unit:");

        jLabel222.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel222.setText("Tag Cost:");

        jLabel224.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel224.setText("Total Material Cost");

        pillowsPOH.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsPOH.setText("0.00");

        jLabel225.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel225.setText("Fiber Cost:");

        jLabel226.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel226.setText("Lable Cost:");

        pillowsPEBagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsPEBagCost.setText("0.00");

        pillowsTotalMaterialCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowsTotalMaterialCost.setText("0.00");

        pillowsFabricCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsFabricCost.setText("0.00");

        jLabel227.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel227.setText("Fabric Cost:");

        pillowsPipingCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowsPipingCost.setText("0.00");

        pillowsToatalCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowsToatalCost.setText("0.00");

        jLabel343.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel343.setText("Net Selling Price:");

        jLabel344.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel344.setText("Taxes:");

        jLabel345.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel345.setText("Gross Selling Price:");

        pillowsNetSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowsNetSellingPrice.setText("0.00");

        pillowsTaxes.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowsTaxes.setText("0.00");

        pillowsGrossSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowsGrossSellingPrice.setText("0.00");

        pillowsExportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/export.png"))); // NOI18N
        pillowsExportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowsExportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel37Layout.createSequentialGroup()
                                .addComponent(jLabel345)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pillowsGrossSellingPrice))
                            .addGroup(jPanel37Layout.createSequentialGroup()
                                .addComponent(jLabel344)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pillowsTaxes))
                            .addGroup(jPanel37Layout.createSequentialGroup()
                                .addComponent(jLabel343)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pillowsNetSellingPrice))
                            .addGroup(jPanel37Layout.createSequentialGroup()
                                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel222)
                                    .addComponent(jLabel224)
                                    .addComponent(jLabel226)
                                    .addComponent(jLabel225)
                                    .addComponent(jLabel227)
                                    .addComponent(jLabel220)
                                    .addComponent(jLabel221)
                                    .addComponent(jLabel218)
                                    .addComponent(jLabel217)
                                    .addComponent(jLabel216)
                                    .addComponent(jLabel214))
                                .addGap(198, 198, 198)
                                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pillowsTotalMaterialCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsPEBagCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsFabricCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsPOH, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsPipingCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsToatalCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsTagCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsLableCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsLabourCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsFiberCost, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pillowsThreadCost, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(pillowsExportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(jLabel215)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(pillowsExportButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel227)
                            .addComponent(pillowsFabricCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel225)
                            .addComponent(pillowsFiberCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel216)
                            .addComponent(pillowsThreadCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel226)
                            .addComponent(pillowsLableCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel222)
                            .addComponent(pillowsTagCost))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel218)
                            .addComponent(pillowsPipingCost, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel214)
                            .addComponent(pillowsPEBagCost)))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel215, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel224)
                    .addComponent(pillowsTotalMaterialCost))
                .addGap(19, 19, 19)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel220)
                    .addComponent(pillowsPOH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel217)
                    .addComponent(pillowsLabourCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel221)
                    .addComponent(pillowsToatalCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(jLabel343)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel344)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel345))
                    .addGroup(jPanel37Layout.createSequentialGroup()
                        .addComponent(pillowsNetSellingPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowsTaxes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowsGrossSellingPrice)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pillowsCPUPanelLayout = new javax.swing.GroupLayout(pillowsCPUPanel);
        pillowsCPUPanel.setLayout(pillowsCPUPanelLayout);
        pillowsCPUPanelLayout.setHorizontalGroup(
            pillowsCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pillowsCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pillowsCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel37, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pillowsCPUPanelLayout.setVerticalGroup(
            pillowsCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pillowsCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pillowsCostingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pillowsCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pillowsCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pillowsCostingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pillowsCPUPanel.setVisible(false);
    }// </editor-fold>//GEN-END:initComponents

    private void pillowRangeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowRangeComboActionPerformed
        if (((String) pillowRangeCombo.getSelectedItem()).equalsIgnoreCase("Kapok/Organic")) {
            jLabel231.setVisible(false);
            pillowTypeCombo.setVisible(false);
        } else {
            jLabel231.setVisible(true);
            pillowTypeCombo.setVisible(true);
        }
        pillowFabricTypeCombo.setModel(new DefaultComboBoxModel(PillowLogic.getMaterialTypes((String) pillowRangeCombo.getSelectedItem())));
        pillowSizeCombo.setModel(new DefaultComboBoxModel(PillowLogic.getPillowSizes((String) pillowRangeCombo.getSelectedItem(), (String) pillowTypeCombo.getSelectedItem())));
        pillowFiberTypeCombo.setModel(new DefaultComboBoxModel(PillowLogic.getFiberTypes((String) pillowRangeCombo.getSelectedItem())));
}//GEN-LAST:event_pillowRangeComboActionPerformed

    private void pillowTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowTypeComboActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_pillowTypeComboActionPerformed

    private void pillowFabricWastageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowFabricWastageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_pillowFabricWastageActionPerformed

    private void pillowFabricTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowFabricTypeComboActionPerformed
        pillowSizeCombo.setModel(new DefaultComboBoxModel(PillowLogic.getPillowSizes((String) pillowRangeCombo.getSelectedItem(), (String) pillowTypeCombo.getSelectedItem())));
}//GEN-LAST:event_pillowFabricTypeComboActionPerformed

    private void pillowsSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowsSubmitButtonActionPerformed
        PillowsViewModel pCost = new PillowsViewModel();

        String pillowRange = (String) pillowRangeCombo.getSelectedItem();
        pCost.setProductRange(pillowRange);

        String pillowType = (String) pillowTypeCombo.getSelectedItem();
        pCost.setPillowType(pillowType);

        String fabricType = (String) pillowFabricTypeCombo.getSelectedItem();
        pCost.setMaterialType(fabricType);

        String size = (String) pillowSizeCombo.getSelectedItem();
        pCost.setSize(size);

        try {
            double fabricWastage = Double.parseDouble(pillowFabricWastage.getText());
            if (fabricWastage < 0 || fabricWastage > 10) {
                JOptionPane.showMessageDialog(this, "Fabric wastage should be between 0 and 10 %");
                return;
            }
            pCost.setFabricWastage(fabricWastage);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid fabric wastage value");
            return;
        }

        try {
            double fiberWeight = Double.parseDouble(pillowsCustomFiberWeight.getText());
            if (fiberWeight < 0.0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid custom fiber weight");
                return;
            }
            pCost.setCustomeFiberWeight(fiberWeight);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid custom fiber weight");
            return;
        }

        try {
            double otherCost = Double.parseDouble(pillowsOtherCostVal.getText());
            if (otherCost < 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
                return;
            }
            pCost.setOtherCost(otherCost);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
            return;
        }

        String fiberType = (String) pillowFiberTypeCombo.getSelectedItem();
        pCost.setFiberType(fiberType);

        try {
            double fiberWastage = Double.parseDouble(pillowFiberWastage.getText());
            if (fiberWastage < 0 || fiberWastage > 10) {
                JOptionPane.showMessageDialog(this, "Fiber wastage should be between 0 and 10 %");
                return;
            }
            pCost.setFiberWastage(fiberWastage);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid fiber wastage value");
            return;
        }

        try {
            double margin = Double.parseDouble(pillowsMarginField.getText());
            if (margin < 0) {
                JOptionPane.showMessageDialog(this, "Profit margin should be a positive value");
                return;
            }
            pCost.setMargin(margin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid margin value");
            return;
        }

        try {
            double taxRate = Double.parseDouble(pillowsTaxField.getText());
            if (taxRate < 0) {
                JOptionPane.showMessageDialog(this, "Tax rate should be a positive value");
                return;
            }
            pCost.setTaxRate(taxRate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid tax rate value");
            return;
        }

        boolean useCustom = pillowsUseCustom.isSelected();
        if (useCustom) {
            pCost.setIsCustom(useCustom);
            try {
                Double width = Double.parseDouble(pillowsCustomWidth.getText());
                if (width <= 0 || width > 120) {
                    JOptionPane.showMessageDialog(this, "Width should be between 0 and 120");
                    return;
                }
                pCost.setCustomWidth(width);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid width value");
                return;
            }

            try {
                Double height = Double.parseDouble(pillowsCustomHeight.getText());
                if (height <= 0 || height > 120) {
                    JOptionPane.showMessageDialog(this, "Height should be between 0 and 120");
                    return;
                }
                pCost.setCustomHeight(height);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid height value");
                return;
            }

            pCost.setIncludeLable(pillowsIncludeLable.isSelected());
            pCost.setIncludeTag(pillowsIncludeTag.isSelected());
            pCost.setIncludePEBag(pillowsIncludePEBag.isSelected());
        }
        DecimalFormat format = new DecimalFormat();
        format.setMaximumFractionDigits(2);
        format.setMinimumFractionDigits(2);

        PillowsViewModel pReturn = PillowLogic.getCostPerUnit(pCost);
        pillowsFabricCost.setText(format.format(pReturn.getFabricCost()) + "");
        pillowsFiberCost.setText(format.format(pReturn.getFiberCost()) + "");
        pillowsThreadCost.setText(format.format(pReturn.getThreadCost()) + "");
        pillowsLableCost.setText(format.format(pReturn.getLableCost()) + "");
        pillowsTagCost.setText(format.format(pReturn.getTagCost()) + "");
        pillowsPEBagCost.setText(format.format(pReturn.getPEBagCost()) + "");
        pillowsPipingCost.setText(format.format(pReturn.getPipingCost()) + "");
        pillowsTotalMaterialCost.setText(format.format(pReturn.getTotalMaterialCost()) + "");
        pillowsPOH.setText(format.format(pReturn.getPohCost()) + "");
        pillowsLabourCost.setText(format.format(pReturn.getLabourCost()) + "");
        pillowsToatalCost.setText(format.format(pReturn.getTotalCost()) + "");
        pillowsFabricCutWidth.setText(format.format(pReturn.getFabricCuttingWidth()) + "");
        pillowsFabricCutHeight.setText(format.format(pReturn.getFabricCuttingHeight()) + "");
        pillowsFiberWeight.setText(format.format(pReturn.getFiberWeight()) + "");
        pillowsSMVValue.setText(format.format(pReturn.getSmvValue()) + "");
        pillowsNetSellingPrice.setText(format.format(pReturn.getNetSellingPrice()));
        pillowsTaxes.setText(format.format(pReturn.getTaxes()));
        pillowsGrossSellingPrice.setText(format.format(pReturn.getGrossSellingPrice()));

        MainWindow.tempFaric = pCost.getFabric();
        MainWindow.tempTaffata = pCost.getTaffata();
        MainWindow.tempPadding = pCost.getPadding();

        pillowsCPUPanel.setVisible(true);
    }//GEN-LAST:event_pillowsSubmitButtonActionPerformed

    private void pillowsUseCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowsUseCustomActionPerformed
        if (pillowsUseCustom.isSelected()) {
            pillowsCustomPanel.setVisible(true);
            pillowsSizeLable.setVisible(false);
            pillowSizeCombo.setVisible(false);
        } else {
            pillowsCustomPanel.setVisible(false);
            pillowsSizeLable.setVisible(true);
            pillowSizeCombo.setVisible(true);
        }
}//GEN-LAST:event_pillowsUseCustomActionPerformed

    private void pillowCustomFiberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowCustomFiberButtonActionPerformed
        if (pillowCustomFiberButton.isSelected()) {
            pillowFiberTypeCombo.setModel(new DefaultComboBoxModel(PillowLogic.getFiberTypes("Other")));
        } else {
            pillowFiberTypeCombo.setModel(new DefaultComboBoxModel(PillowLogic.getFiberTypes((String) pillowRangeCombo.getSelectedItem())));
        }
}//GEN-LAST:event_pillowCustomFiberButtonActionPerformed

    private void pillowFiberTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowFiberTypeComboActionPerformed
}//GEN-LAST:event_pillowFiberTypeComboActionPerformed

    private void pillowFiberWastageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowFiberWastageActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_pillowFiberWastageActionPerformed

    private void pillowsExportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowsExportButtonActionPerformed
        //ading the quotation object
        QuationObject qObject = new QuationObject(
                "Pillow",
                pillowRangeCombo.getSelectedItem() + "",
                pillowFabricTypeCombo.getSelectedItem() + "",
                pillowsUseCustom.isSelected() == true ? pillowsCustomWidth.getText() + "X" + pillowsCustomHeight.getText() : pillowSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(pillowsGrossSellingPrice.getText().replaceAll(",", "")));

        //adding the costing summary object
        SummaryObject summaryObj = new SummaryObject(
                "Pillow",
                pillowRangeCombo.getSelectedItem() + "",
                pillowFabricTypeCombo.getSelectedItem() + "",
                pillowFiberTypeCombo.getSelectedItem() + "",
                pillowsUseCustom.isSelected() == true ? pillowsCustomWidth.getText() + "X" + pillowsCustomHeight.getText() : pillowSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(pillowsToatalCost.getText().replaceAll(",", "")),
                Double.parseDouble(pillowsMarginField.getText().replaceAll(",", "")),
                Double.parseDouble(pillowsTaxField.getText().replaceAll(",", "")));

        //have to add data to this
        ArrayList<Map.Entry<String, String>> prodSpecs = new ArrayList<Map.Entry<String, String>>();
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Product Range", pillowRangeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Pillow Type", pillowTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Type", pillowFabricTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Size", pillowSizeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Wastage", pillowFabricWastage.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Type", pillowFiberTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Wastage", pillowFiberWastage.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Custom Fiber Weight", pillowFiberWastage.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Lable", pillowsIncludeLable.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Tag", pillowsIncludeTag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include PE Bag", pillowsIncludePEBag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Margin", pillowsMarginField.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Taxes", pillowsTaxField.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Other Costs", pillowsOtherCostVal.getText()));

        ArrayList<Map.Entry<String, String>> costDescs = new ArrayList<Map.Entry<String, String>>();
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Cost", pillowsFabricCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Cost", pillowsFiberCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Thread Cost", pillowsThreadCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Lable Cost", pillowsLableCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Tag Cost", pillowsTagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Piping Cost", pillowsPipingCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("PE Bag Cost", pillowsPEBagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Material Cost", pillowsTotalMaterialCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("POH", pillowsPOH.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Labour Cost", pillowsLabourCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Cost Per Unit", pillowsToatalCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Net Selling Price", pillowsNetSellingPrice.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Taxes", pillowsTaxes.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Gross Selling Price", pillowsGrossSellingPrice.getText()));

        ArrayList<Map.Entry<String, String>> manuSpecs = new ArrayList<Map.Entry<String, String>>();
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Cutting Width", pillowsFabricCutWidth.getText()));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Cutting Height", pillowsFabricCutHeight.getText()));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Fiber Weight", pillowsFiberWeight.getText()));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("SMV Value", pillowsSMVValue.getText()));

        try {
            int n = Integer.parseInt(quantity.getText());
            qObject.setQuantity(n);
            summaryObj.setQuantity(n);

            if (MainWindow.tempFaric != null) {
                Set keys = MainWindow.tempFaric.keySet();
                for (int i = 0; i < keys.size(); i++) {
                    String key = (String) keys.toArray()[i];
                    if (MainWindow.globalFaric.containsKey(key)) {
                        String sValue = (String) MainWindow.globalFaric.get(key);
                        Double value = Double.parseDouble(sValue);
                        String tempSValue = (String) MainWindow.tempFaric.get(key);
                        Double tempValue = Double.parseDouble(tempSValue) * n;

                        value += tempValue;

                        MainWindow.globalFaric.put(key, value);
                    } else {
                        String sValue = (String) MainWindow.tempFaric.get(key);
                        Double value = Double.parseDouble(sValue) * n;
                        MainWindow.globalFaric.put(key, value);
                    }
                }
            }

            if (MainWindow.tempPadding != null) {
                Set keys = MainWindow.tempPadding.keySet();
                for (int i = 0; i < keys.size(); i++) {
                    String key = (String) keys.toArray()[i];
                    if (MainWindow.globalPadding.containsKey(key)) {
                        String sValue = (String) MainWindow.globalPadding.get(key);
                        Double value = Double.parseDouble(sValue);
                        String tempSValue = (String) MainWindow.tempPadding.get(key);
                        Double tempValue = Double.parseDouble(tempSValue) * n;

                        value += tempValue;

                        MainWindow.globalPadding.put(key, value);
                    } else {
                        String sValue = (String) MainWindow.tempPadding.get(key);
                        Double value = Double.parseDouble(sValue) * n;
                        MainWindow.globalPadding.put(key, value);
                    }
                }
            }

            if (MainWindow.tempTaffata != null) {
                Set keys = MainWindow.tempTaffata.keySet();
                for (int i = 0; i < keys.size(); i++) {
                    String key = (String) keys.toArray()[i];
                    if (MainWindow.globalTaffata.containsKey(key)) {
                        String sValue = (String) MainWindow.globalTaffata.get(key);
                        Double value = Double.parseDouble(sValue);
                        String tempSValue = (String) MainWindow.tempTaffata.get(key);
                        Double tempValue = Double.parseDouble(tempSValue) * n;

                        value += tempValue;

                        MainWindow.globalTaffata.put(key, value);
                    } else {
                        String sValue = (String) MainWindow.tempTaffata.get(key);
                        Double value = Double.parseDouble(sValue) * n;
                        MainWindow.globalTaffata.put(key, value);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid quantity value");
            return;
        }

        ItemSummaryObject itemSumObj = new ItemSummaryObject("Pillow", summaryObj, prodSpecs, costDescs, manuSpecs);
        MainWindow.quotation.addQuatationObject(qObject, itemSumObj);

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final AddOrderSuccess dialog = new AddOrderSuccess(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
}//GEN-LAST:event_pillowsExportButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel208;
    private javax.swing.JLabel jLabel210;
    private javax.swing.JLabel jLabel211;
    private javax.swing.JLabel jLabel212;
    private javax.swing.JLabel jLabel213;
    private javax.swing.JLabel jLabel214;
    private javax.swing.JLabel jLabel215;
    private javax.swing.JLabel jLabel216;
    private javax.swing.JLabel jLabel217;
    private javax.swing.JLabel jLabel218;
    private javax.swing.JLabel jLabel220;
    private javax.swing.JLabel jLabel221;
    private javax.swing.JLabel jLabel222;
    private javax.swing.JLabel jLabel224;
    private javax.swing.JLabel jLabel225;
    private javax.swing.JLabel jLabel226;
    private javax.swing.JLabel jLabel227;
    private javax.swing.JLabel jLabel228;
    private javax.swing.JLabel jLabel229;
    private javax.swing.JLabel jLabel230;
    private javax.swing.JLabel jLabel231;
    private javax.swing.JLabel jLabel232;
    private javax.swing.JLabel jLabel233;
    private javax.swing.JLabel jLabel234;
    private javax.swing.JLabel jLabel235;
    private javax.swing.JLabel jLabel236;
    private javax.swing.JLabel jLabel237;
    private javax.swing.JLabel jLabel246;
    private javax.swing.JLabel jLabel247;
    private javax.swing.JLabel jLabel313;
    private javax.swing.JLabel jLabel314;
    private javax.swing.JLabel jLabel315;
    private javax.swing.JLabel jLabel316;
    private javax.swing.JLabel jLabel317;
    private javax.swing.JLabel jLabel318;
    private javax.swing.JLabel jLabel343;
    private javax.swing.JLabel jLabel344;
    private javax.swing.JLabel jLabel345;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JRadioButton pillowCustomFiberButton;
    private javax.swing.JComboBox pillowFabricTypeCombo;
    private javax.swing.JTextField pillowFabricWastage;
    private javax.swing.JComboBox pillowFiberTypeCombo;
    private javax.swing.JTextField pillowFiberWastage;
    private javax.swing.JComboBox pillowRangeCombo;
    private javax.swing.JComboBox pillowSizeCombo;
    private javax.swing.JComboBox pillowTypeCombo;
    private javax.swing.JPanel pillowsCPUPanel;
    private javax.swing.JPanel pillowsCostingPanel;
    private javax.swing.JTextField pillowsCustomFiberWeight;
    private javax.swing.JTextField pillowsCustomHeight;
    private javax.swing.JPanel pillowsCustomPanel;
    private javax.swing.JTextField pillowsCustomWidth;
    private javax.swing.JButton pillowsExportButton;
    private javax.swing.JLabel pillowsFabricCost;
    private javax.swing.JLabel pillowsFabricCutHeight;
    private javax.swing.JLabel pillowsFabricCutWidth;
    private javax.swing.JLabel pillowsFiberCost;
    private javax.swing.JLabel pillowsFiberWeight;
    private javax.swing.JLabel pillowsGrossSellingPrice;
    private javax.swing.JRadioButton pillowsIncludeLable;
    private javax.swing.JRadioButton pillowsIncludePEBag;
    private javax.swing.JRadioButton pillowsIncludeTag;
    private javax.swing.JLabel pillowsLableCost;
    private javax.swing.JLabel pillowsLabourCost;
    private javax.swing.JTextField pillowsMarginField;
    private javax.swing.JLabel pillowsNetSellingPrice;
    private javax.swing.JTextField pillowsOtherCostVal;
    private javax.swing.JLabel pillowsPEBagCost;
    private javax.swing.JLabel pillowsPOH;
    private javax.swing.JLabel pillowsPipingCost;
    private javax.swing.JLabel pillowsSMVValue;
    private javax.swing.JLabel pillowsSizeLable;
    private javax.swing.JButton pillowsSubmitButton;
    private javax.swing.JLabel pillowsTagCost;
    private javax.swing.JTextField pillowsTaxField;
    private javax.swing.JLabel pillowsTaxes;
    private javax.swing.JLabel pillowsThreadCost;
    private javax.swing.JLabel pillowsToatalCost;
    private javax.swing.JLabel pillowsTotalMaterialCost;
    private javax.swing.JRadioButton pillowsUseCustom;
    private javax.swing.JTextField quantity;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new PillowsCostingPanel());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
}
