/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BedSheetPanel.java
 *
 * Created on Apr 25, 2013, 1:53:11 AM
 */
package view;

import celcius.Config;
import excel.ItemSummaryObject;
import excel.QuationObject;
import excel.SummaryObject;
import java.awt.EventQueue;
import java.text.DecimalFormat;
import java.util.AbstractMap;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logic.BedSheetLogic;
import logic.PillowProtectorLogic;
import ui.helpers.ComboBoxRenderer;
import viewmodels.PillowProtectorViewModel;

/**
 *
 * @author naka
 */
public class PillowSlipCostingPanel extends javax.swing.JPanel {

    /**
     * Creates new form BedSheetPanel
     */
    public PillowSlipCostingPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        bedSheetCostingPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pillowProtectorProductRangeCombo = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        pillowProtectorMaterialTypeCombo = new javax.swing.JComboBox();
        pillowProtectorSizeCombo = new javax.swing.JComboBox();
        bedSheetSizeLable = new javax.swing.JLabel();
        pillowProtectorUseCustom = new javax.swing.JRadioButton();
        bedSheetCustomPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pillowProtectorCustomWidth = new javax.swing.JTextField();
        pillowProtectorCustomLength = new javax.swing.JTextField();
        pillowProtectorIncludeLable = new javax.swing.JRadioButton();
        pillowProtectorIncludeTag = new javax.swing.JRadioButton();
        pillowProtectorIncludePEBag = new javax.swing.JRadioButton();
        pillowProtectorSubmitButton = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        pillowProtectorMarginField = new javax.swing.JTextField();
        pillowProtectorTaxField = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        bedsheetOtherCost = new javax.swing.JLabel();
        pillowProtectorOtherCostVal = new javax.swing.JTextField();
        tafettaPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        pillowProtectorWastage = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        bedsheetOtherCost1 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        bedSheetCPUPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        pillowProtectorCutWidth = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        pillowProtectorCutLength = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        pilllowProtectorSMVValue = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        pillowProtectorFabricCost = new javax.swing.JLabel();
        pillowProtectorThreadCost = new javax.swing.JLabel();
        pillowProtectorLableCost = new javax.swing.JLabel();
        pillowProtectorfittedSheetTagCost = new javax.swing.JLabel();
        pillowProtectorPEBagCost = new javax.swing.JLabel();
        pillowProtectorPOH = new javax.swing.JLabel();
        pillowProtectorLabourCost = new javax.swing.JLabel();
        pillowProtectorTotalCost = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        pillowProtectorTotalMaterialCost = new javax.swing.JLabel();
        jLabel325 = new javax.swing.JLabel();
        jLabel326 = new javax.swing.JLabel();
        jLabel327 = new javax.swing.JLabel();
        pillowProtectorNetSellingPrice = new javax.swing.JLabel();
        pillowProtectorTaxes = new javax.swing.JLabel();
        pillowProtectorGrossSellingPrice = new javax.swing.JLabel();
        bedSheetExportButton = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        pillowProtectorZipperCost = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();

        bedSheetCostingPanel.setMinimumSize(new java.awt.Dimension(500, 500));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel5.setText("Pillow Slip Costing");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel6.setText("Select Product Range:");

        pillowProtectorProductRangeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorProductRangeCombo.setModel(new javax.swing.DefaultComboBoxModel(PillowProtectorLogic.getProductRanges()));
        pillowProtectorProductRangeCombo.setRenderer(new ComboBoxRenderer(PillowProtectorLogic.getProductRanges()));
        pillowProtectorProductRangeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowProtectorProductRangeComboActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel7.setText("Select Material Type:");

        pillowProtectorMaterialTypeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorMaterialTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(PillowProtectorLogic.getMaterialTypes((String)pillowProtectorProductRangeCombo.getSelectedItem())));
        pillowProtectorMaterialTypeCombo.setRenderer(new ComboBoxRenderer(PillowProtectorLogic.getMaterialTypes((String)pillowProtectorProductRangeCombo.getSelectedItem())));

        pillowProtectorSizeCombo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorSizeCombo.setModel(new javax.swing.DefaultComboBoxModel(PillowProtectorLogic.getPillowProtectorSizes()));
        pillowProtectorSizeCombo.setRenderer(new ComboBoxRenderer(PillowProtectorLogic.getPillowProtectorSizes()));

        bedSheetSizeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedSheetSizeLable.setText("Select Size:");

        pillowProtectorUseCustom.setBackground(new java.awt.Color(204, 204, 204));
        pillowProtectorUseCustom.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorUseCustom.setText("Use Custom Sizes");
        pillowProtectorUseCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowProtectorUseCustomActionPerformed(evt);
            }
        });

        bedSheetCustomPanel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        bedSheetCustomPanel.setPreferredSize(new java.awt.Dimension(411, 206));
        bedSheetCustomPanel.setVisible(false);
        bedSheetCustomPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel9.setText("Width (inches) :");
        bedSheetCustomPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 16, -1, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel10.setText("Length (inches):");
        bedSheetCustomPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 52, -1, -1));

        pillowProtectorCustomWidth.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedSheetCustomPanel.add(pillowProtectorCustomWidth, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 11, 96, -1));

        pillowProtectorCustomLength.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedSheetCustomPanel.add(pillowProtectorCustomLength, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 49, 96, -1));

        pillowProtectorIncludeLable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorIncludeLable.setText("Include Lable");
        bedSheetCustomPanel.add(pillowProtectorIncludeLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 87, -1, -1));

        pillowProtectorIncludeTag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorIncludeTag.setText("Include Tag");
        bedSheetCustomPanel.add(pillowProtectorIncludeTag, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        pillowProtectorIncludePEBag.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorIncludePEBag.setText("Include PE Bag");
        bedSheetCustomPanel.add(pillowProtectorIncludePEBag, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        pillowProtectorSubmitButton.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorSubmitButton.setText("Find Cost Per Unit");
        pillowProtectorSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowProtectorSubmitButtonActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel30.setText("Margin:");

        jLabel55.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel55.setText("Taxes:");

        pillowProtectorMarginField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorMarginField.setText(Config.profitMargin);

        pillowProtectorTaxField.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorTaxField.setText(Config.taxesRate);

        jLabel84.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel84.setText("%");

        jLabel123.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel123.setText("%");

        bedsheetOtherCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedsheetOtherCost.setText("Other costs");

        pillowProtectorOtherCostVal.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorOtherCostVal.setText("0.00");
        pillowProtectorTaxField.setText(Config.taxesRate);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel11.setText("Wastage:");

        pillowProtectorWastage.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorWastage.setText("3");
        pillowProtectorWastage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pillowProtectorWastageActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel26.setText("%");

        javax.swing.GroupLayout tafettaPanelLayout = new javax.swing.GroupLayout(tafettaPanel);
        tafettaPanel.setLayout(tafettaPanelLayout);
        tafettaPanelLayout.setHorizontalGroup(
            tafettaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tafettaPanelLayout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGap(145, 145, 145)
                .addComponent(pillowProtectorWastage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addGap(0, 166, Short.MAX_VALUE))
        );
        tafettaPanelLayout.setVerticalGroup(
            tafettaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tafettaPanelLayout.createSequentialGroup()
                .addGroup(tafettaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(pillowProtectorWastage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        bedsheetOtherCost1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        bedsheetOtherCost1.setText("Quantity");

        quantity.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        quantity.setText("1");
        pillowProtectorTaxField.setText(Config.taxesRate);

        javax.swing.GroupLayout bedSheetCostingPanelLayout = new javax.swing.GroupLayout(bedSheetCostingPanel);
        bedSheetCostingPanel.setLayout(bedSheetCostingPanelLayout);
        bedSheetCostingPanelLayout.setHorizontalGroup(
            bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel6)
                        .addGap(67, 67, 67)
                        .addComponent(pillowProtectorProductRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel7)
                        .addGap(72, 72, 72)
                        .addComponent(pillowProtectorMaterialTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel5))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(pillowProtectorSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pillowProtectorUseCustom, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bedSheetSizeLable)
                            .addComponent(bedSheetCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tafettaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel55)
                                    .addComponent(bedsheetOtherCost)
                                    .addComponent(bedsheetOtherCost1))
                                .addGap(125, 125, 125)
                                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pillowProtectorOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                                        .addComponent(pillowProtectorTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel123))
                                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                                        .addComponent(pillowProtectorMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel84))))))
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(pillowProtectorSubmitButton)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        bedSheetCostingPanelLayout.setVerticalGroup(
            bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel6))
                    .addComponent(pillowProtectorProductRangeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7))
                    .addComponent(pillowProtectorMaterialTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pillowProtectorSizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bedSheetCostingPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(bedSheetSizeLable)))
                .addGap(26, 26, 26)
                .addComponent(tafettaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pillowProtectorUseCustom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bedSheetCustomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(pillowProtectorMarginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel84))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(pillowProtectorTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel123))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedsheetOtherCost)
                    .addComponent(pillowProtectorOtherCostVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bedSheetCostingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bedsheetOtherCost1)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pillowProtectorSubmitButton)
                .addContainerGap())
        );

        bedSheetCPUPanel.setVisible(false);
        bedSheetCPUPanel.setPreferredSize(new java.awt.Dimension(500, 800));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel24.setText("Cut Width:");

        pillowProtectorCutWidth.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorCutWidth.setText("0.00");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel25.setText("Production Parameters");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel27.setText("Cut Length:");

        pillowProtectorCutLength.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorCutLength.setText("0.00");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel28.setText("SMV Value:");

        pilllowProtectorSMVValue.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pilllowProtectorSMVValue.setText("0.00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jLabel25)
                .addContainerGap(118, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(pillowProtectorCutWidth)
                    .addComponent(pillowProtectorCutLength)
                    .addComponent(pilllowProtectorSMVValue))
                .addGap(46, 46, 46))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(pillowProtectorCutWidth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(pillowProtectorCutLength))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(pilllowProtectorSMVValue))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel14.setText("Fabric Cost:");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel15.setText("Thread Cost:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel13.setText("Lable Cost:");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel16.setText("Tag Cost:");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("POH:");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Labour Cost:");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel21.setText("Toatal Cost Per Unit:");

        pillowProtectorFabricCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorFabricCost.setText("0.00");

        pillowProtectorThreadCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorThreadCost.setText("0.00");

        pillowProtectorLableCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorLableCost.setText("0.00");

        pillowProtectorfittedSheetTagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorfittedSheetTagCost.setText("0.00");

        pillowProtectorPEBagCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorPEBagCost.setText("0.00");

        pillowProtectorPOH.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pillowProtectorPOH.setText("0.00");

        pillowProtectorLabourCost.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pillowProtectorLabourCost.setText("0.00");

        pillowProtectorTotalCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowProtectorTotalCost.setText("0.00");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel22.setText("Cost Per Unit");

        jLabel77.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel77.setText("Total Material Cost");

        pillowProtectorTotalMaterialCost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowProtectorTotalMaterialCost.setText("0.00");

        jLabel325.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel325.setText("Net Selling Price:");

        jLabel326.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel326.setText("Taxes:");

        jLabel327.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel327.setText("Gross Selling Price:");

        pillowProtectorNetSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowProtectorNetSellingPrice.setText("0.00");

        pillowProtectorTaxes.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowProtectorTaxes.setText("0.00");

        pillowProtectorGrossSellingPrice.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pillowProtectorGrossSellingPrice.setText("0.00");

        bedSheetExportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/export.png"))); // NOI18N
        bedSheetExportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedSheetExportButtonActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel29.setText("PE Bag Cost:");

        pillowProtectorZipperCost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        pillowProtectorZipperCost.setText("0.00");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel31.setText("Zipper Cost");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel22))
                    .addComponent(bedSheetExportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel327)
                    .addComponent(jLabel326)
                    .addComponent(jLabel325)
                    .addComponent(jLabel21)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16)
                    .addComponent(jLabel77)
                    .addComponent(jLabel29)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pillowProtectorTotalCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorLabourCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorPOH, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorPEBagCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorfittedSheetTagCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorLableCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorThreadCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorNetSellingPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorGrossSellingPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorFabricCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorTaxes, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorTotalMaterialCost, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pillowProtectorZipperCost, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(46, 46, 46))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(pillowProtectorFabricCost)
                        .addGap(11, 11, 11)
                        .addComponent(pillowProtectorThreadCost)
                        .addGap(11, 11, 11)
                        .addComponent(pillowProtectorLableCost)
                        .addGap(11, 11, 11)
                        .addComponent(pillowProtectorfittedSheetTagCost))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22))
                            .addComponent(bedSheetExportButton))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel14)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel15)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel13)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(pillowProtectorPEBagCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowProtectorZipperCost))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)
                        .addGap(3, 3, 3)))
                .addGap(59, 59, 59)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(pillowProtectorTotalMaterialCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pillowProtectorPOH)
                        .addGap(13, 13, 13)
                        .addComponent(pillowProtectorLabourCost)
                        .addGap(23, 23, 23)
                        .addComponent(pillowProtectorTotalCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowProtectorNetSellingPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowProtectorTaxes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pillowProtectorGrossSellingPrice))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel77)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel19)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel325)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel326)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel327)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bedSheetCPUPanelLayout = new javax.swing.GroupLayout(bedSheetCPUPanel);
        bedSheetCPUPanel.setLayout(bedSheetCPUPanelLayout);
        bedSheetCPUPanelLayout.setHorizontalGroup(
            bedSheetCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bedSheetCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bedSheetCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        bedSheetCPUPanelLayout.setVerticalGroup(
            bedSheetCPUPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bedSheetCPUPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bedSheetCostingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(bedSheetCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bedSheetCPUPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bedSheetCostingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pillowProtectorProductRangeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowProtectorProductRangeComboActionPerformed
        pillowProtectorMaterialTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(BedSheetLogic.getMaterialTypes((String) pillowProtectorProductRangeCombo.getSelectedItem())));
}//GEN-LAST:event_pillowProtectorProductRangeComboActionPerformed

    private void pillowProtectorUseCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowProtectorUseCustomActionPerformed
        // TODO add your handling code here:
        if (pillowProtectorUseCustom.isSelected()) {
            bedSheetCustomPanel.setVisible(true);
            pillowProtectorSizeCombo.setVisible(false);
            bedSheetSizeLable.setVisible(false);
        } else {
            bedSheetCustomPanel.setVisible(false);
            pillowProtectorSizeCombo.setVisible(true);
            bedSheetSizeLable.setVisible(true);
        }
    }//GEN-LAST:event_pillowProtectorUseCustomActionPerformed

    private void pillowProtectorSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowProtectorSubmitButtonActionPerformed
        PillowProtectorViewModel fCost = new PillowProtectorViewModel();
        String productRange = (String) pillowProtectorProductRangeCombo.getSelectedItem();
        fCost.setProductRange(productRange);

        String materialType = (String) pillowProtectorMaterialTypeCombo.getSelectedItem();
        fCost.setMaterialType(materialType);

        String size = (String) pillowProtectorSizeCombo.getSelectedItem();
        fCost.setSize(size);

        try {
            double wastage = Double.parseDouble(pillowProtectorWastage.getText());
            if (wastage < 0 || wastage > 10) {
                JOptionPane.showMessageDialog(this, "Wastage should be between 0 and 10 %");
                return;
            }
            fCost.setWastage(wastage);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid wastage value");
            return;
        }

        try {
            double otherCost = Double.parseDouble(pillowProtectorOtherCostVal.getText());
            if (otherCost < 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
                return;
            }
            fCost.setOtherCost(otherCost);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid value for other costs");
            return;
        }

        try {
            double margin = Double.parseDouble(pillowProtectorMarginField.getText());
            if (margin < 0) {
                JOptionPane.showMessageDialog(this, "Profit margin should be a positive value");
                return;
            }
            fCost.setMargin(margin);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid margin value");
            return;
        }

        try {
            double taxRate = Double.parseDouble(pillowProtectorTaxField.getText());
            if (taxRate < 0) {
                JOptionPane.showMessageDialog(this, "Tax rate should be a positive value");
                return;
            }
            fCost.setTaxRate(taxRate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid tax rate value");
            return;
        }

        boolean useCustom = pillowProtectorUseCustom.isSelected();
        if (useCustom) {
            fCost.setIsCustom(useCustom);
            try {
                Double width = Double.parseDouble(pillowProtectorCustomWidth.getText());
                if (width <= 0 || width > 120) {
                    JOptionPane.showMessageDialog(this, "Width should be between 0 and 120");
                    return;
                }
                fCost.setCustomWidth(width);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid diameter value");
                return;
            }

            try {
                Double length = Double.parseDouble(pillowProtectorCustomLength.getText());
                if (length <= 0 || length > 120) {
                    JOptionPane.showMessageDialog(this, "Length should be between 0 and 120");
                    return;
                }
                fCost.setCustomLength(length);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Please enter a valid height value");
                return;
            }

            fCost.setIncludeLable(pillowProtectorIncludeLable.isSelected());
            fCost.setIncludeTag(pillowProtectorIncludeTag.isSelected());
            fCost.setIncludePEBag(pillowProtectorIncludePEBag.isSelected());
        }
        DecimalFormat format = new DecimalFormat();
        format.setMaximumFractionDigits(2);
        format.setMinimumFractionDigits(2);

        fCost.setIsPillowSlip(true);
        
        PillowProtectorViewModel bReturn = PillowProtectorLogic.getCostPerUnit(fCost);
        pillowProtectorFabricCost.setText(format.format(bReturn.getFabricCost()) + "");
        pillowProtectorThreadCost.setText(format.format(bReturn.getThreadCost()) + "");
        pillowProtectorLableCost.setText(format.format(bReturn.getLableCost()) + "");
        pillowProtectorfittedSheetTagCost.setText(format.format(bReturn.getTagCost()) + "");
        pillowProtectorPEBagCost.setText(format.format(bReturn.getPEBagCost()) + "");
        pillowProtectorZipperCost.setText(format.format(bReturn.getZipperCost()) + "");
        pillowProtectorPOH.setText(format.format(bReturn.getPohCost()) + "");
        pillowProtectorLabourCost.setText(format.format(bReturn.getLabourCost()) + "");
        pillowProtectorTotalCost.setText(format.format(bReturn.getTotalCost()) + "");
        pillowProtectorCutWidth.setText(format.format(bReturn.getSmvValue()));
        pillowProtectorTotalMaterialCost.setText(format.format(bReturn.getTotalMaterialCost()));
        pillowProtectorNetSellingPrice.setText(format.format(bReturn.getNetSellingPrice()));
        pillowProtectorTaxes.setText(format.format(bReturn.getTaxes()));
        pillowProtectorGrossSellingPrice.setText(format.format(bReturn.getGrossSellingPrice()));

        pilllowProtectorSMVValue.setText(format.format(bReturn.getSmvValue()));
        pillowProtectorCutWidth.setText(format.format(bReturn.getCuttingWidth()));
        pillowProtectorCutLength.setText(format.format(bReturn.getCuttingHeight()));

        bedSheetCPUPanel.setVisible(true);
}//GEN-LAST:event_pillowProtectorSubmitButtonActionPerformed

    private void bedSheetExportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedSheetExportButtonActionPerformed
        //ading the quotation object
        QuationObject qObject = new QuationObject(
                "Pillow Slip",
                pillowProtectorProductRangeCombo.getSelectedItem() + "",
                pillowProtectorMaterialTypeCombo.getSelectedItem() + "",
                pillowProtectorUseCustom.isSelected() == true ? pillowProtectorCustomWidth.getText() + "X" + pillowProtectorCustomLength.getText() : pillowProtectorSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(pillowProtectorGrossSellingPrice.getText().replaceAll(",", "")));

        //adding the costing summary object
        SummaryObject summaryObj = new SummaryObject(
                "Pillow Slip",
                pillowProtectorProductRangeCombo.getSelectedItem() + "",
                pillowProtectorMaterialTypeCombo.getSelectedItem() + "",
                "",
                pillowProtectorUseCustom.isSelected() == true ? pillowProtectorCustomWidth.getText() + "X" + pillowProtectorCustomLength.getText() : pillowProtectorSizeCombo.getSelectedItem() + "",
                1,
                Double.parseDouble(pillowProtectorTotalCost.getText().replaceAll(",", "")),
                Double.parseDouble(pillowProtectorMarginField.getText().replaceAll(",", "")),
                Double.parseDouble(pillowProtectorTaxField.getText().replaceAll(",", "")));

        //have to add data to this
        ArrayList<Map.Entry<String, String>> prodSpecs = new ArrayList<Map.Entry<String, String>>();
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Product Range", pillowProtectorProductRangeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Material Type", pillowProtectorMaterialTypeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Size", pillowProtectorUseCustom.isSelected() == true ? pillowProtectorCustomWidth.getText() + "X" + pillowProtectorCustomLength.getText() : pillowProtectorSizeCombo.getSelectedItem() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Wastage", pillowProtectorWastage.getText()));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Lable", pillowProtectorIncludeLable.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include Tag", pillowProtectorIncludeTag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Include PE Bag", pillowProtectorIncludePEBag.isSelected() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Margin", pillowProtectorMarginField.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Tax", pillowProtectorTaxField.getText() + ""));
        prodSpecs.add(new AbstractMap.SimpleEntry<String, String>("Other Costs", pillowProtectorOtherCostVal.getText() + ""));

        ArrayList<Map.Entry<String, String>> costDescs = new ArrayList<Map.Entry<String, String>>();
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Fabric Cost", pillowProtectorFabricCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Thread Cost", pillowProtectorThreadCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Lable Cost", pillowProtectorLableCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Tag Cost", pillowProtectorfittedSheetTagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("PE Bag Cost", pillowProtectorPEBagCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Zipper Cost", pillowProtectorZipperCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Material Cost", pillowProtectorTotalMaterialCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("POH", pillowProtectorPOH.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Labour Cost", pillowProtectorLabourCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Total Cost Per Unit", pillowProtectorTotalCost.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Net Selling Price", pillowProtectorNetSellingPrice.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Taxes", pillowProtectorTaxes.getText()));
        costDescs.add(new AbstractMap.SimpleEntry<String, String>("Gross Selling Price", pillowProtectorGrossSellingPrice.getText()));

        ArrayList<Map.Entry<String, String>> manuSpecs = new ArrayList<Map.Entry<String, String>>();
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Cut Width", pillowProtectorCutWidth.getText()));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("Cut Length", pillowProtectorCutLength.getText()));
        manuSpecs.add(new AbstractMap.SimpleEntry<String, String>("SMV Value", pilllowProtectorSMVValue.getText()));


        try {
            int n = Integer.parseInt(quantity.getText());
            qObject.setQuantity(n);
            summaryObj.setQuantity(n);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid quantity value");
            return;
        }


        ItemSummaryObject itemSumObj = new ItemSummaryObject("Pillow Slip", summaryObj, prodSpecs, costDescs, manuSpecs);
        MainWindow.quotation.addQuatationObject(qObject, itemSumObj);



        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final AddOrderSuccess dialog = new AddOrderSuccess(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            }
        });
    }//GEN-LAST:event_bedSheetExportButtonActionPerformed

    private void pillowProtectorWastageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pillowProtectorWastageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pillowProtectorWastageActionPerformed

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new PillowSlipCostingPanel());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bedSheetCPUPanel;
    private javax.swing.JPanel bedSheetCostingPanel;
    private javax.swing.JPanel bedSheetCustomPanel;
    private javax.swing.JButton bedSheetExportButton;
    private javax.swing.JLabel bedSheetSizeLable;
    private javax.swing.JLabel bedsheetOtherCost;
    private javax.swing.JLabel bedsheetOtherCost1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel325;
    private javax.swing.JLabel jLabel326;
    private javax.swing.JLabel jLabel327;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel pilllowProtectorSMVValue;
    private javax.swing.JTextField pillowProtectorCustomLength;
    private javax.swing.JTextField pillowProtectorCustomWidth;
    private javax.swing.JLabel pillowProtectorCutLength;
    private javax.swing.JLabel pillowProtectorCutWidth;
    private javax.swing.JLabel pillowProtectorFabricCost;
    private javax.swing.JLabel pillowProtectorGrossSellingPrice;
    private javax.swing.JRadioButton pillowProtectorIncludeLable;
    private javax.swing.JRadioButton pillowProtectorIncludePEBag;
    private javax.swing.JRadioButton pillowProtectorIncludeTag;
    private javax.swing.JLabel pillowProtectorLableCost;
    private javax.swing.JLabel pillowProtectorLabourCost;
    private javax.swing.JTextField pillowProtectorMarginField;
    private javax.swing.JComboBox pillowProtectorMaterialTypeCombo;
    private javax.swing.JLabel pillowProtectorNetSellingPrice;
    private javax.swing.JTextField pillowProtectorOtherCostVal;
    private javax.swing.JLabel pillowProtectorPEBagCost;
    private javax.swing.JLabel pillowProtectorPOH;
    private javax.swing.JComboBox pillowProtectorProductRangeCombo;
    private javax.swing.JComboBox pillowProtectorSizeCombo;
    private javax.swing.JButton pillowProtectorSubmitButton;
    private javax.swing.JTextField pillowProtectorTaxField;
    private javax.swing.JLabel pillowProtectorTaxes;
    private javax.swing.JLabel pillowProtectorThreadCost;
    private javax.swing.JLabel pillowProtectorTotalCost;
    private javax.swing.JLabel pillowProtectorTotalMaterialCost;
    private javax.swing.JRadioButton pillowProtectorUseCustom;
    private javax.swing.JTextField pillowProtectorWastage;
    private javax.swing.JLabel pillowProtectorZipperCost;
    private javax.swing.JLabel pillowProtectorfittedSheetTagCost;
    private javax.swing.JTextField quantity;
    private javax.swing.JPanel tafettaPanel;
    // End of variables declaration//GEN-END:variables
}
